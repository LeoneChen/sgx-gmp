# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 1996, 1998-2003, 2012 Free Software Foundation, Inc.
#
#  This file is part of the GNU MP Library.
#
#  The GNU MP Library is free software; you can redistribute it and/or modify
#  it under the terms of either:
#
#    * the GNU Lesser General Public License as published by the Free
#      Software Foundation; either version 3 of the License, or (at your
#      option) any later version.
#
#  or
#
#    * the GNU General Public License as published by the Free Software
#      Foundation; either version 2 of the License, or (at your option) any
#      later version.
#
#  or both in parallel, as here.
#
#  The GNU MP Library is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#  for more details.
#
#  You should have received copies of the GNU General Public License and the
#  GNU Lesser General Public License along with the GNU MP Library.  If not,
#  see https://www.gnu.org/licenses/.


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = mpz
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/sgx_init.m4 \
	$(top_srcdir)/m4/sgx_init_optional.m4 \
	$(top_srcdir)/m4/sgx_tstdc_check.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libmpz_a_AR = $(AR) $(ARFLAGS)
libmpz_a_LIBADD =
am__libmpz_a_SOURCES_DIST = aors.h aors_ui.h fits_s.h mul_i.h \
	2fac_ui.c add.c add_ui.c abs.c aorsmul.c aorsmul_i.c and.c \
	array_init.c bin_ui.c bin_uiui.c cdiv_q.c cdiv_q_ui.c \
	cdiv_qr.c cdiv_qr_ui.c cdiv_r.c cdiv_r_ui.c cdiv_ui.c \
	cfdiv_q_2exp.c cfdiv_r_2exp.c clear.c clears.c clrbit.c cmp.c \
	cmp_d.c cmp_si.c cmp_ui.c cmpabs.c cmpabs_d.c cmpabs_ui.c \
	com.c combit.c cong.c cong_2exp.c cong_ui.c divexact.c \
	divegcd.c dive_ui.c divis.c divis_ui.c divis_2exp.c dump.c \
	export.c fac_ui.c fdiv_q.c fdiv_q_ui.c fdiv_qr.c fdiv_qr_ui.c \
	fdiv_r.c fdiv_r_ui.c fdiv_ui.c fib_ui.c fib2_ui.c fits_sint.c \
	fits_slong.c fits_sshort.c fits_uint.c fits_ulong.c \
	fits_ushort.c gcd.c gcd_ui.c gcdext.c get_d.c get_d_2exp.c \
	get_si.c get_str.c get_ui.c getlimbn.c hamdist.c import.c \
	init.c init2.c inits.c invert.c ior.c iset.c iset_d.c \
	iset_si.c iset_str.c iset_ui.c jacobi.c kronsz.c kronuz.c \
	kronzs.c kronzu.c lcm.c lcm_ui.c limbs_read.c limbs_write.c \
	limbs_modify.c limbs_finish.c lucnum_ui.c lucnum2_ui.c \
	mfac_uiui.c millerrabin.c mod.c mul.c mul_2exp.c mul_si.c \
	mul_ui.c n_pow_ui.c neg.c nextprime.c oddfac_1.c perfpow.c \
	perfsqr.c popcount.c pow_ui.c powm.c powm_sec.c powm_ui.c \
	pprime_p.c prodlimbs.c primorial_ui.c random.c random2.c \
	realloc.c realloc2.c remove.c roinit_n.c root.c rootrem.c \
	rrandomb.c scan0.c scan1.c set.c set_d.c set_f.c set_q.c \
	set_si.c set_str.c set_ui.c setbit.c size.c sizeinbase.c \
	sqrt.c sqrtrem.c sub.c sub_ui.c swap.c tdiv_ui.c tdiv_q.c \
	tdiv_q_2exp.c tdiv_q_ui.c tdiv_qr.c tdiv_qr_ui.c tdiv_r.c \
	tdiv_r_2exp.c tdiv_r_ui.c tstbit.c ui_pow_ui.c ui_sub.c \
	urandomb.c urandomm.c xor.c
am__objects_1 = libmpz_a-2fac_ui.$(OBJEXT) libmpz_a-add.$(OBJEXT) \
	libmpz_a-add_ui.$(OBJEXT) libmpz_a-abs.$(OBJEXT) \
	libmpz_a-aorsmul.$(OBJEXT) libmpz_a-aorsmul_i.$(OBJEXT) \
	libmpz_a-and.$(OBJEXT) libmpz_a-array_init.$(OBJEXT) \
	libmpz_a-bin_ui.$(OBJEXT) libmpz_a-bin_uiui.$(OBJEXT) \
	libmpz_a-cdiv_q.$(OBJEXT) libmpz_a-cdiv_q_ui.$(OBJEXT) \
	libmpz_a-cdiv_qr.$(OBJEXT) libmpz_a-cdiv_qr_ui.$(OBJEXT) \
	libmpz_a-cdiv_r.$(OBJEXT) libmpz_a-cdiv_r_ui.$(OBJEXT) \
	libmpz_a-cdiv_ui.$(OBJEXT) libmpz_a-cfdiv_q_2exp.$(OBJEXT) \
	libmpz_a-cfdiv_r_2exp.$(OBJEXT) libmpz_a-clear.$(OBJEXT) \
	libmpz_a-clears.$(OBJEXT) libmpz_a-clrbit.$(OBJEXT) \
	libmpz_a-cmp.$(OBJEXT) libmpz_a-cmp_d.$(OBJEXT) \
	libmpz_a-cmp_si.$(OBJEXT) libmpz_a-cmp_ui.$(OBJEXT) \
	libmpz_a-cmpabs.$(OBJEXT) libmpz_a-cmpabs_d.$(OBJEXT) \
	libmpz_a-cmpabs_ui.$(OBJEXT) libmpz_a-com.$(OBJEXT) \
	libmpz_a-combit.$(OBJEXT) libmpz_a-cong.$(OBJEXT) \
	libmpz_a-cong_2exp.$(OBJEXT) libmpz_a-cong_ui.$(OBJEXT) \
	libmpz_a-divexact.$(OBJEXT) libmpz_a-divegcd.$(OBJEXT) \
	libmpz_a-dive_ui.$(OBJEXT) libmpz_a-divis.$(OBJEXT) \
	libmpz_a-divis_ui.$(OBJEXT) libmpz_a-divis_2exp.$(OBJEXT) \
	libmpz_a-dump.$(OBJEXT) libmpz_a-export.$(OBJEXT) \
	libmpz_a-fac_ui.$(OBJEXT) libmpz_a-fdiv_q.$(OBJEXT) \
	libmpz_a-fdiv_q_ui.$(OBJEXT) libmpz_a-fdiv_qr.$(OBJEXT) \
	libmpz_a-fdiv_qr_ui.$(OBJEXT) libmpz_a-fdiv_r.$(OBJEXT) \
	libmpz_a-fdiv_r_ui.$(OBJEXT) libmpz_a-fdiv_ui.$(OBJEXT) \
	libmpz_a-fib_ui.$(OBJEXT) libmpz_a-fib2_ui.$(OBJEXT) \
	libmpz_a-fits_sint.$(OBJEXT) libmpz_a-fits_slong.$(OBJEXT) \
	libmpz_a-fits_sshort.$(OBJEXT) libmpz_a-fits_uint.$(OBJEXT) \
	libmpz_a-fits_ulong.$(OBJEXT) libmpz_a-fits_ushort.$(OBJEXT) \
	libmpz_a-gcd.$(OBJEXT) libmpz_a-gcd_ui.$(OBJEXT) \
	libmpz_a-gcdext.$(OBJEXT) libmpz_a-get_d.$(OBJEXT) \
	libmpz_a-get_d_2exp.$(OBJEXT) libmpz_a-get_si.$(OBJEXT) \
	libmpz_a-get_str.$(OBJEXT) libmpz_a-get_ui.$(OBJEXT) \
	libmpz_a-getlimbn.$(OBJEXT) libmpz_a-hamdist.$(OBJEXT) \
	libmpz_a-import.$(OBJEXT) libmpz_a-init.$(OBJEXT) \
	libmpz_a-init2.$(OBJEXT) libmpz_a-inits.$(OBJEXT) \
	libmpz_a-invert.$(OBJEXT) libmpz_a-ior.$(OBJEXT) \
	libmpz_a-iset.$(OBJEXT) libmpz_a-iset_d.$(OBJEXT) \
	libmpz_a-iset_si.$(OBJEXT) libmpz_a-iset_str.$(OBJEXT) \
	libmpz_a-iset_ui.$(OBJEXT) libmpz_a-jacobi.$(OBJEXT) \
	libmpz_a-kronsz.$(OBJEXT) libmpz_a-kronuz.$(OBJEXT) \
	libmpz_a-kronzs.$(OBJEXT) libmpz_a-kronzu.$(OBJEXT) \
	libmpz_a-lcm.$(OBJEXT) libmpz_a-lcm_ui.$(OBJEXT) \
	libmpz_a-limbs_read.$(OBJEXT) libmpz_a-limbs_write.$(OBJEXT) \
	libmpz_a-limbs_modify.$(OBJEXT) \
	libmpz_a-limbs_finish.$(OBJEXT) libmpz_a-lucnum_ui.$(OBJEXT) \
	libmpz_a-lucnum2_ui.$(OBJEXT) libmpz_a-mfac_uiui.$(OBJEXT) \
	libmpz_a-millerrabin.$(OBJEXT) libmpz_a-mod.$(OBJEXT) \
	libmpz_a-mul.$(OBJEXT) libmpz_a-mul_2exp.$(OBJEXT) \
	libmpz_a-mul_si.$(OBJEXT) libmpz_a-mul_ui.$(OBJEXT) \
	libmpz_a-n_pow_ui.$(OBJEXT) libmpz_a-neg.$(OBJEXT) \
	libmpz_a-nextprime.$(OBJEXT) libmpz_a-oddfac_1.$(OBJEXT) \
	libmpz_a-perfpow.$(OBJEXT) libmpz_a-perfsqr.$(OBJEXT) \
	libmpz_a-popcount.$(OBJEXT) libmpz_a-pow_ui.$(OBJEXT) \
	libmpz_a-powm.$(OBJEXT) libmpz_a-powm_sec.$(OBJEXT) \
	libmpz_a-powm_ui.$(OBJEXT) libmpz_a-pprime_p.$(OBJEXT) \
	libmpz_a-prodlimbs.$(OBJEXT) libmpz_a-primorial_ui.$(OBJEXT) \
	libmpz_a-random.$(OBJEXT) libmpz_a-random2.$(OBJEXT) \
	libmpz_a-realloc.$(OBJEXT) libmpz_a-realloc2.$(OBJEXT) \
	libmpz_a-remove.$(OBJEXT) libmpz_a-roinit_n.$(OBJEXT) \
	libmpz_a-root.$(OBJEXT) libmpz_a-rootrem.$(OBJEXT) \
	libmpz_a-rrandomb.$(OBJEXT) libmpz_a-scan0.$(OBJEXT) \
	libmpz_a-scan1.$(OBJEXT) libmpz_a-set.$(OBJEXT) \
	libmpz_a-set_d.$(OBJEXT) libmpz_a-set_f.$(OBJEXT) \
	libmpz_a-set_q.$(OBJEXT) libmpz_a-set_si.$(OBJEXT) \
	libmpz_a-set_str.$(OBJEXT) libmpz_a-set_ui.$(OBJEXT) \
	libmpz_a-setbit.$(OBJEXT) libmpz_a-size.$(OBJEXT) \
	libmpz_a-sizeinbase.$(OBJEXT) libmpz_a-sqrt.$(OBJEXT) \
	libmpz_a-sqrtrem.$(OBJEXT) libmpz_a-sub.$(OBJEXT) \
	libmpz_a-sub_ui.$(OBJEXT) libmpz_a-swap.$(OBJEXT) \
	libmpz_a-tdiv_ui.$(OBJEXT) libmpz_a-tdiv_q.$(OBJEXT) \
	libmpz_a-tdiv_q_2exp.$(OBJEXT) libmpz_a-tdiv_q_ui.$(OBJEXT) \
	libmpz_a-tdiv_qr.$(OBJEXT) libmpz_a-tdiv_qr_ui.$(OBJEXT) \
	libmpz_a-tdiv_r.$(OBJEXT) libmpz_a-tdiv_r_2exp.$(OBJEXT) \
	libmpz_a-tdiv_r_ui.$(OBJEXT) libmpz_a-tstbit.$(OBJEXT) \
	libmpz_a-ui_pow_ui.$(OBJEXT) libmpz_a-ui_sub.$(OBJEXT) \
	libmpz_a-urandomb.$(OBJEXT) libmpz_a-urandomm.$(OBJEXT) \
	libmpz_a-xor.$(OBJEXT)
@SGX_ENABLED_TRUE@am_libmpz_a_OBJECTS = $(am__objects_1)
libmpz_a_OBJECTS = $(am_libmpz_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libmpz_la_LIBADD =
am__libmpz_la_SOURCES_DIST = aors.h aors_ui.h fits_s.h mul_i.h \
	2fac_ui.c add.c add_ui.c abs.c aorsmul.c aorsmul_i.c and.c \
	array_init.c bin_ui.c bin_uiui.c cdiv_q.c cdiv_q_ui.c \
	cdiv_qr.c cdiv_qr_ui.c cdiv_r.c cdiv_r_ui.c cdiv_ui.c \
	cfdiv_q_2exp.c cfdiv_r_2exp.c clear.c clears.c clrbit.c cmp.c \
	cmp_d.c cmp_si.c cmp_ui.c cmpabs.c cmpabs_d.c cmpabs_ui.c \
	com.c combit.c cong.c cong_2exp.c cong_ui.c divexact.c \
	divegcd.c dive_ui.c divis.c divis_ui.c divis_2exp.c dump.c \
	export.c fac_ui.c fdiv_q.c fdiv_q_ui.c fdiv_qr.c fdiv_qr_ui.c \
	fdiv_r.c fdiv_r_ui.c fdiv_ui.c fib_ui.c fib2_ui.c fits_sint.c \
	fits_slong.c fits_sshort.c fits_uint.c fits_ulong.c \
	fits_ushort.c gcd.c gcd_ui.c gcdext.c get_d.c get_d_2exp.c \
	get_si.c get_str.c get_ui.c getlimbn.c hamdist.c import.c \
	init.c init2.c inits.c invert.c ior.c iset.c iset_d.c \
	iset_si.c iset_str.c iset_ui.c jacobi.c kronsz.c kronuz.c \
	kronzs.c kronzu.c lcm.c lcm_ui.c limbs_read.c limbs_write.c \
	limbs_modify.c limbs_finish.c lucnum_ui.c lucnum2_ui.c \
	mfac_uiui.c millerrabin.c mod.c mul.c mul_2exp.c mul_si.c \
	mul_ui.c n_pow_ui.c neg.c nextprime.c oddfac_1.c perfpow.c \
	perfsqr.c popcount.c pow_ui.c powm.c powm_sec.c powm_ui.c \
	pprime_p.c prodlimbs.c primorial_ui.c random.c random2.c \
	realloc.c realloc2.c remove.c roinit_n.c root.c rootrem.c \
	rrandomb.c scan0.c scan1.c set.c set_d.c set_f.c set_q.c \
	set_si.c set_str.c set_ui.c setbit.c size.c sizeinbase.c \
	sqrt.c sqrtrem.c sub.c sub_ui.c swap.c tdiv_ui.c tdiv_q.c \
	tdiv_q_2exp.c tdiv_q_ui.c tdiv_qr.c tdiv_qr_ui.c tdiv_r.c \
	tdiv_r_2exp.c tdiv_r_ui.c tstbit.c ui_pow_ui.c ui_sub.c \
	urandomb.c urandomm.c xor.c inp_raw.c inp_str.c out_raw.c \
	out_str.c
am__objects_2 = 2fac_ui.lo add.lo add_ui.lo abs.lo aorsmul.lo \
	aorsmul_i.lo and.lo array_init.lo bin_ui.lo bin_uiui.lo \
	cdiv_q.lo cdiv_q_ui.lo cdiv_qr.lo cdiv_qr_ui.lo cdiv_r.lo \
	cdiv_r_ui.lo cdiv_ui.lo cfdiv_q_2exp.lo cfdiv_r_2exp.lo \
	clear.lo clears.lo clrbit.lo cmp.lo cmp_d.lo cmp_si.lo \
	cmp_ui.lo cmpabs.lo cmpabs_d.lo cmpabs_ui.lo com.lo combit.lo \
	cong.lo cong_2exp.lo cong_ui.lo divexact.lo divegcd.lo \
	dive_ui.lo divis.lo divis_ui.lo divis_2exp.lo dump.lo \
	export.lo fac_ui.lo fdiv_q.lo fdiv_q_ui.lo fdiv_qr.lo \
	fdiv_qr_ui.lo fdiv_r.lo fdiv_r_ui.lo fdiv_ui.lo fib_ui.lo \
	fib2_ui.lo fits_sint.lo fits_slong.lo fits_sshort.lo \
	fits_uint.lo fits_ulong.lo fits_ushort.lo gcd.lo gcd_ui.lo \
	gcdext.lo get_d.lo get_d_2exp.lo get_si.lo get_str.lo \
	get_ui.lo getlimbn.lo hamdist.lo import.lo init.lo init2.lo \
	inits.lo invert.lo ior.lo iset.lo iset_d.lo iset_si.lo \
	iset_str.lo iset_ui.lo jacobi.lo kronsz.lo kronuz.lo kronzs.lo \
	kronzu.lo lcm.lo lcm_ui.lo limbs_read.lo limbs_write.lo \
	limbs_modify.lo limbs_finish.lo lucnum_ui.lo lucnum2_ui.lo \
	mfac_uiui.lo millerrabin.lo mod.lo mul.lo mul_2exp.lo \
	mul_si.lo mul_ui.lo n_pow_ui.lo neg.lo nextprime.lo \
	oddfac_1.lo perfpow.lo perfsqr.lo popcount.lo pow_ui.lo \
	powm.lo powm_sec.lo powm_ui.lo pprime_p.lo prodlimbs.lo \
	primorial_ui.lo random.lo random2.lo realloc.lo realloc2.lo \
	remove.lo roinit_n.lo root.lo rootrem.lo rrandomb.lo scan0.lo \
	scan1.lo set.lo set_d.lo set_f.lo set_q.lo set_si.lo \
	set_str.lo set_ui.lo setbit.lo size.lo sizeinbase.lo sqrt.lo \
	sqrtrem.lo sub.lo sub_ui.lo swap.lo tdiv_ui.lo tdiv_q.lo \
	tdiv_q_2exp.lo tdiv_q_ui.lo tdiv_qr.lo tdiv_qr_ui.lo tdiv_r.lo \
	tdiv_r_2exp.lo tdiv_r_ui.lo tstbit.lo ui_pow_ui.lo ui_sub.lo \
	urandomb.lo urandomm.lo xor.lo
@SGX_ENABLED_FALSE@am_libmpz_la_OBJECTS = $(am__objects_2) inp_raw.lo \
@SGX_ENABLED_FALSE@	inp_str.lo out_raw.lo out_str.lo
libmpz_la_OBJECTS = $(am_libmpz_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
@SGX_ENABLED_FALSE@am_libmpz_la_rpath =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmpz_a_SOURCES) $(libmpz_la_SOURCES)
DIST_SOURCES = $(am__libmpz_a_SOURCES_DIST) \
	$(am__libmpz_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/sgx_tlib.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI = @ABI@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
ASMFLAGS = @ASMFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CALLING_CONVENTIONS_OBJS = @CALLING_CONVENTIONS_OBJS@
CC = @CC@
CCAS = @CCAS@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CFLAGS_CPU = @CFLAGS_CPU@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPP_FOR_BUILD = @CPP_FOR_BUILD@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFN_LONG_LONG_LIMB = @DEFN_LONG_LONG_LIMB@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENCLAVE_SIGN_TARGET = @ENCLAVE_SIGN_TARGET@
EXEEXT = @EXEEXT@
EXEEXT_FOR_BUILD = @EXEEXT_FOR_BUILD@
FGREP = @FGREP@
GMP_LDFLAGS = @GMP_LDFLAGS@
GMP_LIMB_BITS = @GMP_LIMB_BITS@
GMP_NAIL_BITS = @GMP_NAIL_BITS@
GMP_WITH_SGX = @GMP_WITH_SGX@
GREP = @GREP@
HAVE_CLOCK_01 = @HAVE_CLOCK_01@
HAVE_CPUTIME_01 = @HAVE_CPUTIME_01@
HAVE_GETRUSAGE_01 = @HAVE_GETRUSAGE_01@
HAVE_GETTIMEOFDAY_01 = @HAVE_GETTIMEOFDAY_01@
HAVE_HOST_CPU_FAMILY_power = @HAVE_HOST_CPU_FAMILY_power@
HAVE_HOST_CPU_FAMILY_powerpc = @HAVE_HOST_CPU_FAMILY_powerpc@
HAVE_SIGACTION_01 = @HAVE_SIGACTION_01@
HAVE_SIGALTSTACK_01 = @HAVE_SIGALTSTACK_01@
HAVE_SIGSTACK_01 = @HAVE_SIGSTACK_01@
HAVE_STACK_T_01 = @HAVE_STACK_T_01@
HAVE_SYS_RESOURCE_H_01 = @HAVE_SYS_RESOURCE_H_01@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCURSES = @LIBCURSES@
LIBGMPXX_LDFLAGS = @LIBGMPXX_LDFLAGS@
LIBGMP_DLL = @LIBGMP_DLL@
LIBGMP_LDFLAGS = @LIBGMP_LDFLAGS@
LIBM = @LIBM@
LIBM_FOR_BUILD = @LIBM_FOR_BUILD@
LIBOBJS = @LIBOBJS@
LIBREADLINE = @LIBREADLINE@
LIBS = @LIBS@
LIBS_HW_SIMU = @LIBS_HW_SIMU@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4 = @M4@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SGXSDK = @SGXSDK@
SGXSDK_BINDIR = @SGXSDK_BINDIR@
SGXSDK_INCDIR = @SGXSDK_INCDIR@
SGXSDK_LIBDIR = @SGXSDK_LIBDIR@
SGXSSL = @SGXSSL@
SGXSSL_INCDIR = @SGXSSL_INCDIR@
SGXSSL_LIBDIR = @SGXSSL_LIBDIR@
SGX_DEBUG_FLAGS = @SGX_DEBUG_FLAGS@
SGX_ENCLAVE_CFLAGS = @SGX_ENCLAVE_CFLAGS@
SGX_ENCLAVE_CPPFLAGS = @SGX_ENCLAVE_CPPFLAGS@
SGX_ENCLAVE_CXXFLAGS = @SGX_ENCLAVE_CXXFLAGS@
SGX_ENCLAVE_LDADD = @SGX_ENCLAVE_LDADD@
SGX_ENCLAVE_LDFLAGS = @SGX_ENCLAVE_LDFLAGS@
SGX_TLIB_CFLAGS = @SGX_TLIB_CFLAGS@
SGX_TLIB_CPPFLAGS = @SGX_TLIB_CPPFLAGS@
SGX_TLIB_CXXFLAGS = @SGX_TLIB_CXXFLAGS@
SGX_TRTS_LIB = @SGX_TRTS_LIB@
SGX_TSERVICE_LIB = @SGX_TSERVICE_LIB@
SGX_UAE_SERVICE_LIB = @SGX_UAE_SERVICE_LIB@
SGX_URTS_LIB = @SGX_URTS_LIB@
SHELL = @SHELL@
SPEED_CYCLECOUNTER_OBJ = @SPEED_CYCLECOUNTER_OBJ@
STRIP = @STRIP@
TAL_OBJECT = @TAL_OBJECT@
TUNE_LIBS = @TUNE_LIBS@
TUNE_SQR_OBJ = @TUNE_SQR_OBJ@
U_FOR_BUILD = @U_FOR_BUILD@
VERSION = @VERSION@
WITH_READLINE_01 = @WITH_READLINE_01@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enclave_libdir = @enclave_libdir@
exec_prefix = @exec_prefix@
gmp_srclinks = @gmp_srclinks@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mpn_objects = @mpn_objects@
mpn_objs_in_libgmp = @mpn_objs_in_libgmp@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SGX_EDGER8R = $(SGXSDK_BINDIR)/sgx_edger8r
SGXSSL_BINDIR = @SGXSSL_BINDIR@
@SGX_ENABLED_TRUE@AM_CFLAGS = @SGX_TLIB_CFLAGS@ $(CFLAGS_CPU)
@SGX_ENABLED_FALSE@AM_CPPFLAGS = -D__GMP_WITHIN_GMP -I$(top_srcdir)
@SGX_ENABLED_TRUE@AM_CPPFLAGS = @SGX_TLIB_CPPFLAGS@ -D__GMP_WITHIN_GMP \
@SGX_ENABLED_TRUE@	-I$(top_srcdir)
@SGX_ENABLED_TRUE@AM_CXXFLAGS = @SGX_TLIB_CXXFLAGS@

# Include our Intel SGX trusted enclave library definitions
# -John Mechalas <john.p.mechalas@intel.com>

#------------------------------------------------------------
# Set our build targets, and the architecture flags for gcc
# since we aren't using libtool.
# -John Mechalas <john.p.mechalas@intel.com>
#
MPZ_COMMON_SOURCES = aors.h aors_ui.h fits_s.h mul_i.h \
  2fac_ui.c \
  add.c add_ui.c abs.c aorsmul.c aorsmul_i.c and.c array_init.c \
  bin_ui.c bin_uiui.c cdiv_q.c \
  cdiv_q_ui.c cdiv_qr.c cdiv_qr_ui.c cdiv_r.c cdiv_r_ui.c cdiv_ui.c \
  cfdiv_q_2exp.c cfdiv_r_2exp.c \
  clear.c clears.c clrbit.c \
  cmp.c cmp_d.c cmp_si.c cmp_ui.c cmpabs.c cmpabs_d.c cmpabs_ui.c \
  com.c combit.c \
  cong.c cong_2exp.c cong_ui.c \
  divexact.c divegcd.c dive_ui.c divis.c divis_ui.c divis_2exp.c \
  dump.c export.c fac_ui.c fdiv_q.c fdiv_q_ui.c \
  fdiv_qr.c fdiv_qr_ui.c fdiv_r.c fdiv_r_ui.c fdiv_ui.c \
  fib_ui.c fib2_ui.c \
  fits_sint.c fits_slong.c fits_sshort.c \
  fits_uint.c fits_ulong.c fits_ushort.c \
  gcd.c gcd_ui.c gcdext.c get_d.c get_d_2exp.c get_si.c \
  get_str.c get_ui.c getlimbn.c hamdist.c \
  import.c init.c init2.c inits.c \
  invert.c ior.c iset.c iset_d.c iset_si.c iset_str.c iset_ui.c \
  jacobi.c kronsz.c kronuz.c kronzs.c kronzu.c \
  lcm.c lcm_ui.c limbs_read.c limbs_write.c limbs_modify.c limbs_finish.c \
  lucnum_ui.c lucnum2_ui.c mfac_uiui.c millerrabin.c \
  mod.c mul.c mul_2exp.c mul_si.c mul_ui.c n_pow_ui.c neg.c nextprime.c \
  oddfac_1.c \
  perfpow.c perfsqr.c popcount.c pow_ui.c powm.c \
  powm_sec.c powm_ui.c pprime_p.c prodlimbs.c primorial_ui.c random.c random2.c \
  realloc.c realloc2.c remove.c roinit_n.c root.c rootrem.c rrandomb.c \
  scan0.c scan1.c set.c set_d.c set_f.c set_q.c set_si.c set_str.c \
  set_ui.c setbit.c size.c sizeinbase.c sqrt.c sqrtrem.c sub.c sub_ui.c \
  swap.c tdiv_ui.c tdiv_q.c tdiv_q_2exp.c tdiv_q_ui.c tdiv_qr.c \
  tdiv_qr_ui.c tdiv_r.c tdiv_r_2exp.c tdiv_r_ui.c tstbit.c ui_pow_ui.c \
  ui_sub.c urandomb.c urandomm.c xor.c

@SGX_ENABLED_TRUE@noinst_LIBRARIES = libmpz.a
@SGX_ENABLED_TRUE@libmpz_a_SOURCES = $(MPZ_COMMON_SOURCES)
@SGX_ENABLED_TRUE@libmpz_a_CFLAGS = $(AM_CFLAGS)
@SGX_ENABLED_FALSE@noinst_LTLIBRARIES = libmpz.la
@SGX_ENABLED_FALSE@libmpz_la_SOURCES = $(MPZ_COMMON_SOURCES) inp_raw.c inp_str.c \
@SGX_ENABLED_FALSE@	out_raw.c out_str.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/sgx_tlib.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps mpz/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps mpz/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/sgx_tlib.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libmpz.a: $(libmpz_a_OBJECTS) $(libmpz_a_DEPENDENCIES) $(EXTRA_libmpz_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmpz.a
	$(AM_V_AR)$(libmpz_a_AR) libmpz.a $(libmpz_a_OBJECTS) $(libmpz_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmpz.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmpz.la: $(libmpz_la_OBJECTS) $(libmpz_la_DEPENDENCIES) $(EXTRA_libmpz_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libmpz_la_rpath) $(libmpz_la_OBJECTS) $(libmpz_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libmpz_a-2fac_ui.o: 2fac_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-2fac_ui.o `test -f '2fac_ui.c' || echo '$(srcdir)/'`2fac_ui.c

libmpz_a-2fac_ui.obj: 2fac_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-2fac_ui.obj `if test -f '2fac_ui.c'; then $(CYGPATH_W) '2fac_ui.c'; else $(CYGPATH_W) '$(srcdir)/2fac_ui.c'; fi`

libmpz_a-add.o: add.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-add.o `test -f 'add.c' || echo '$(srcdir)/'`add.c

libmpz_a-add.obj: add.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-add.obj `if test -f 'add.c'; then $(CYGPATH_W) 'add.c'; else $(CYGPATH_W) '$(srcdir)/add.c'; fi`

libmpz_a-add_ui.o: add_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-add_ui.o `test -f 'add_ui.c' || echo '$(srcdir)/'`add_ui.c

libmpz_a-add_ui.obj: add_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-add_ui.obj `if test -f 'add_ui.c'; then $(CYGPATH_W) 'add_ui.c'; else $(CYGPATH_W) '$(srcdir)/add_ui.c'; fi`

libmpz_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libmpz_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libmpz_a-aorsmul.o: aorsmul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-aorsmul.o `test -f 'aorsmul.c' || echo '$(srcdir)/'`aorsmul.c

libmpz_a-aorsmul.obj: aorsmul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-aorsmul.obj `if test -f 'aorsmul.c'; then $(CYGPATH_W) 'aorsmul.c'; else $(CYGPATH_W) '$(srcdir)/aorsmul.c'; fi`

libmpz_a-aorsmul_i.o: aorsmul_i.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-aorsmul_i.o `test -f 'aorsmul_i.c' || echo '$(srcdir)/'`aorsmul_i.c

libmpz_a-aorsmul_i.obj: aorsmul_i.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-aorsmul_i.obj `if test -f 'aorsmul_i.c'; then $(CYGPATH_W) 'aorsmul_i.c'; else $(CYGPATH_W) '$(srcdir)/aorsmul_i.c'; fi`

libmpz_a-and.o: and.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-and.o `test -f 'and.c' || echo '$(srcdir)/'`and.c

libmpz_a-and.obj: and.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-and.obj `if test -f 'and.c'; then $(CYGPATH_W) 'and.c'; else $(CYGPATH_W) '$(srcdir)/and.c'; fi`

libmpz_a-array_init.o: array_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-array_init.o `test -f 'array_init.c' || echo '$(srcdir)/'`array_init.c

libmpz_a-array_init.obj: array_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-array_init.obj `if test -f 'array_init.c'; then $(CYGPATH_W) 'array_init.c'; else $(CYGPATH_W) '$(srcdir)/array_init.c'; fi`

libmpz_a-bin_ui.o: bin_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-bin_ui.o `test -f 'bin_ui.c' || echo '$(srcdir)/'`bin_ui.c

libmpz_a-bin_ui.obj: bin_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-bin_ui.obj `if test -f 'bin_ui.c'; then $(CYGPATH_W) 'bin_ui.c'; else $(CYGPATH_W) '$(srcdir)/bin_ui.c'; fi`

libmpz_a-bin_uiui.o: bin_uiui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-bin_uiui.o `test -f 'bin_uiui.c' || echo '$(srcdir)/'`bin_uiui.c

libmpz_a-bin_uiui.obj: bin_uiui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-bin_uiui.obj `if test -f 'bin_uiui.c'; then $(CYGPATH_W) 'bin_uiui.c'; else $(CYGPATH_W) '$(srcdir)/bin_uiui.c'; fi`

libmpz_a-cdiv_q.o: cdiv_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_q.o `test -f 'cdiv_q.c' || echo '$(srcdir)/'`cdiv_q.c

libmpz_a-cdiv_q.obj: cdiv_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_q.obj `if test -f 'cdiv_q.c'; then $(CYGPATH_W) 'cdiv_q.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_q.c'; fi`

libmpz_a-cdiv_q_ui.o: cdiv_q_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_q_ui.o `test -f 'cdiv_q_ui.c' || echo '$(srcdir)/'`cdiv_q_ui.c

libmpz_a-cdiv_q_ui.obj: cdiv_q_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_q_ui.obj `if test -f 'cdiv_q_ui.c'; then $(CYGPATH_W) 'cdiv_q_ui.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_q_ui.c'; fi`

libmpz_a-cdiv_qr.o: cdiv_qr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_qr.o `test -f 'cdiv_qr.c' || echo '$(srcdir)/'`cdiv_qr.c

libmpz_a-cdiv_qr.obj: cdiv_qr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_qr.obj `if test -f 'cdiv_qr.c'; then $(CYGPATH_W) 'cdiv_qr.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_qr.c'; fi`

libmpz_a-cdiv_qr_ui.o: cdiv_qr_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_qr_ui.o `test -f 'cdiv_qr_ui.c' || echo '$(srcdir)/'`cdiv_qr_ui.c

libmpz_a-cdiv_qr_ui.obj: cdiv_qr_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_qr_ui.obj `if test -f 'cdiv_qr_ui.c'; then $(CYGPATH_W) 'cdiv_qr_ui.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_qr_ui.c'; fi`

libmpz_a-cdiv_r.o: cdiv_r.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_r.o `test -f 'cdiv_r.c' || echo '$(srcdir)/'`cdiv_r.c

libmpz_a-cdiv_r.obj: cdiv_r.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_r.obj `if test -f 'cdiv_r.c'; then $(CYGPATH_W) 'cdiv_r.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_r.c'; fi`

libmpz_a-cdiv_r_ui.o: cdiv_r_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_r_ui.o `test -f 'cdiv_r_ui.c' || echo '$(srcdir)/'`cdiv_r_ui.c

libmpz_a-cdiv_r_ui.obj: cdiv_r_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_r_ui.obj `if test -f 'cdiv_r_ui.c'; then $(CYGPATH_W) 'cdiv_r_ui.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_r_ui.c'; fi`

libmpz_a-cdiv_ui.o: cdiv_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_ui.o `test -f 'cdiv_ui.c' || echo '$(srcdir)/'`cdiv_ui.c

libmpz_a-cdiv_ui.obj: cdiv_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cdiv_ui.obj `if test -f 'cdiv_ui.c'; then $(CYGPATH_W) 'cdiv_ui.c'; else $(CYGPATH_W) '$(srcdir)/cdiv_ui.c'; fi`

libmpz_a-cfdiv_q_2exp.o: cfdiv_q_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cfdiv_q_2exp.o `test -f 'cfdiv_q_2exp.c' || echo '$(srcdir)/'`cfdiv_q_2exp.c

libmpz_a-cfdiv_q_2exp.obj: cfdiv_q_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cfdiv_q_2exp.obj `if test -f 'cfdiv_q_2exp.c'; then $(CYGPATH_W) 'cfdiv_q_2exp.c'; else $(CYGPATH_W) '$(srcdir)/cfdiv_q_2exp.c'; fi`

libmpz_a-cfdiv_r_2exp.o: cfdiv_r_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cfdiv_r_2exp.o `test -f 'cfdiv_r_2exp.c' || echo '$(srcdir)/'`cfdiv_r_2exp.c

libmpz_a-cfdiv_r_2exp.obj: cfdiv_r_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cfdiv_r_2exp.obj `if test -f 'cfdiv_r_2exp.c'; then $(CYGPATH_W) 'cfdiv_r_2exp.c'; else $(CYGPATH_W) '$(srcdir)/cfdiv_r_2exp.c'; fi`

libmpz_a-clear.o: clear.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-clear.o `test -f 'clear.c' || echo '$(srcdir)/'`clear.c

libmpz_a-clear.obj: clear.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-clear.obj `if test -f 'clear.c'; then $(CYGPATH_W) 'clear.c'; else $(CYGPATH_W) '$(srcdir)/clear.c'; fi`

libmpz_a-clears.o: clears.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-clears.o `test -f 'clears.c' || echo '$(srcdir)/'`clears.c

libmpz_a-clears.obj: clears.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-clears.obj `if test -f 'clears.c'; then $(CYGPATH_W) 'clears.c'; else $(CYGPATH_W) '$(srcdir)/clears.c'; fi`

libmpz_a-clrbit.o: clrbit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-clrbit.o `test -f 'clrbit.c' || echo '$(srcdir)/'`clrbit.c

libmpz_a-clrbit.obj: clrbit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-clrbit.obj `if test -f 'clrbit.c'; then $(CYGPATH_W) 'clrbit.c'; else $(CYGPATH_W) '$(srcdir)/clrbit.c'; fi`

libmpz_a-cmp.o: cmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp.o `test -f 'cmp.c' || echo '$(srcdir)/'`cmp.c

libmpz_a-cmp.obj: cmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp.obj `if test -f 'cmp.c'; then $(CYGPATH_W) 'cmp.c'; else $(CYGPATH_W) '$(srcdir)/cmp.c'; fi`

libmpz_a-cmp_d.o: cmp_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp_d.o `test -f 'cmp_d.c' || echo '$(srcdir)/'`cmp_d.c

libmpz_a-cmp_d.obj: cmp_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp_d.obj `if test -f 'cmp_d.c'; then $(CYGPATH_W) 'cmp_d.c'; else $(CYGPATH_W) '$(srcdir)/cmp_d.c'; fi`

libmpz_a-cmp_si.o: cmp_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp_si.o `test -f 'cmp_si.c' || echo '$(srcdir)/'`cmp_si.c

libmpz_a-cmp_si.obj: cmp_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp_si.obj `if test -f 'cmp_si.c'; then $(CYGPATH_W) 'cmp_si.c'; else $(CYGPATH_W) '$(srcdir)/cmp_si.c'; fi`

libmpz_a-cmp_ui.o: cmp_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp_ui.o `test -f 'cmp_ui.c' || echo '$(srcdir)/'`cmp_ui.c

libmpz_a-cmp_ui.obj: cmp_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmp_ui.obj `if test -f 'cmp_ui.c'; then $(CYGPATH_W) 'cmp_ui.c'; else $(CYGPATH_W) '$(srcdir)/cmp_ui.c'; fi`

libmpz_a-cmpabs.o: cmpabs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmpabs.o `test -f 'cmpabs.c' || echo '$(srcdir)/'`cmpabs.c

libmpz_a-cmpabs.obj: cmpabs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmpabs.obj `if test -f 'cmpabs.c'; then $(CYGPATH_W) 'cmpabs.c'; else $(CYGPATH_W) '$(srcdir)/cmpabs.c'; fi`

libmpz_a-cmpabs_d.o: cmpabs_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmpabs_d.o `test -f 'cmpabs_d.c' || echo '$(srcdir)/'`cmpabs_d.c

libmpz_a-cmpabs_d.obj: cmpabs_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmpabs_d.obj `if test -f 'cmpabs_d.c'; then $(CYGPATH_W) 'cmpabs_d.c'; else $(CYGPATH_W) '$(srcdir)/cmpabs_d.c'; fi`

libmpz_a-cmpabs_ui.o: cmpabs_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmpabs_ui.o `test -f 'cmpabs_ui.c' || echo '$(srcdir)/'`cmpabs_ui.c

libmpz_a-cmpabs_ui.obj: cmpabs_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cmpabs_ui.obj `if test -f 'cmpabs_ui.c'; then $(CYGPATH_W) 'cmpabs_ui.c'; else $(CYGPATH_W) '$(srcdir)/cmpabs_ui.c'; fi`

libmpz_a-com.o: com.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-com.o `test -f 'com.c' || echo '$(srcdir)/'`com.c

libmpz_a-com.obj: com.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-com.obj `if test -f 'com.c'; then $(CYGPATH_W) 'com.c'; else $(CYGPATH_W) '$(srcdir)/com.c'; fi`

libmpz_a-combit.o: combit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-combit.o `test -f 'combit.c' || echo '$(srcdir)/'`combit.c

libmpz_a-combit.obj: combit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-combit.obj `if test -f 'combit.c'; then $(CYGPATH_W) 'combit.c'; else $(CYGPATH_W) '$(srcdir)/combit.c'; fi`

libmpz_a-cong.o: cong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cong.o `test -f 'cong.c' || echo '$(srcdir)/'`cong.c

libmpz_a-cong.obj: cong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cong.obj `if test -f 'cong.c'; then $(CYGPATH_W) 'cong.c'; else $(CYGPATH_W) '$(srcdir)/cong.c'; fi`

libmpz_a-cong_2exp.o: cong_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cong_2exp.o `test -f 'cong_2exp.c' || echo '$(srcdir)/'`cong_2exp.c

libmpz_a-cong_2exp.obj: cong_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cong_2exp.obj `if test -f 'cong_2exp.c'; then $(CYGPATH_W) 'cong_2exp.c'; else $(CYGPATH_W) '$(srcdir)/cong_2exp.c'; fi`

libmpz_a-cong_ui.o: cong_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cong_ui.o `test -f 'cong_ui.c' || echo '$(srcdir)/'`cong_ui.c

libmpz_a-cong_ui.obj: cong_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-cong_ui.obj `if test -f 'cong_ui.c'; then $(CYGPATH_W) 'cong_ui.c'; else $(CYGPATH_W) '$(srcdir)/cong_ui.c'; fi`

libmpz_a-divexact.o: divexact.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divexact.o `test -f 'divexact.c' || echo '$(srcdir)/'`divexact.c

libmpz_a-divexact.obj: divexact.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divexact.obj `if test -f 'divexact.c'; then $(CYGPATH_W) 'divexact.c'; else $(CYGPATH_W) '$(srcdir)/divexact.c'; fi`

libmpz_a-divegcd.o: divegcd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divegcd.o `test -f 'divegcd.c' || echo '$(srcdir)/'`divegcd.c

libmpz_a-divegcd.obj: divegcd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divegcd.obj `if test -f 'divegcd.c'; then $(CYGPATH_W) 'divegcd.c'; else $(CYGPATH_W) '$(srcdir)/divegcd.c'; fi`

libmpz_a-dive_ui.o: dive_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-dive_ui.o `test -f 'dive_ui.c' || echo '$(srcdir)/'`dive_ui.c

libmpz_a-dive_ui.obj: dive_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-dive_ui.obj `if test -f 'dive_ui.c'; then $(CYGPATH_W) 'dive_ui.c'; else $(CYGPATH_W) '$(srcdir)/dive_ui.c'; fi`

libmpz_a-divis.o: divis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divis.o `test -f 'divis.c' || echo '$(srcdir)/'`divis.c

libmpz_a-divis.obj: divis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divis.obj `if test -f 'divis.c'; then $(CYGPATH_W) 'divis.c'; else $(CYGPATH_W) '$(srcdir)/divis.c'; fi`

libmpz_a-divis_ui.o: divis_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divis_ui.o `test -f 'divis_ui.c' || echo '$(srcdir)/'`divis_ui.c

libmpz_a-divis_ui.obj: divis_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divis_ui.obj `if test -f 'divis_ui.c'; then $(CYGPATH_W) 'divis_ui.c'; else $(CYGPATH_W) '$(srcdir)/divis_ui.c'; fi`

libmpz_a-divis_2exp.o: divis_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divis_2exp.o `test -f 'divis_2exp.c' || echo '$(srcdir)/'`divis_2exp.c

libmpz_a-divis_2exp.obj: divis_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-divis_2exp.obj `if test -f 'divis_2exp.c'; then $(CYGPATH_W) 'divis_2exp.c'; else $(CYGPATH_W) '$(srcdir)/divis_2exp.c'; fi`

libmpz_a-dump.o: dump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-dump.o `test -f 'dump.c' || echo '$(srcdir)/'`dump.c

libmpz_a-dump.obj: dump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-dump.obj `if test -f 'dump.c'; then $(CYGPATH_W) 'dump.c'; else $(CYGPATH_W) '$(srcdir)/dump.c'; fi`

libmpz_a-export.o: export.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-export.o `test -f 'export.c' || echo '$(srcdir)/'`export.c

libmpz_a-export.obj: export.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-export.obj `if test -f 'export.c'; then $(CYGPATH_W) 'export.c'; else $(CYGPATH_W) '$(srcdir)/export.c'; fi`

libmpz_a-fac_ui.o: fac_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fac_ui.o `test -f 'fac_ui.c' || echo '$(srcdir)/'`fac_ui.c

libmpz_a-fac_ui.obj: fac_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fac_ui.obj `if test -f 'fac_ui.c'; then $(CYGPATH_W) 'fac_ui.c'; else $(CYGPATH_W) '$(srcdir)/fac_ui.c'; fi`

libmpz_a-fdiv_q.o: fdiv_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_q.o `test -f 'fdiv_q.c' || echo '$(srcdir)/'`fdiv_q.c

libmpz_a-fdiv_q.obj: fdiv_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_q.obj `if test -f 'fdiv_q.c'; then $(CYGPATH_W) 'fdiv_q.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_q.c'; fi`

libmpz_a-fdiv_q_ui.o: fdiv_q_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_q_ui.o `test -f 'fdiv_q_ui.c' || echo '$(srcdir)/'`fdiv_q_ui.c

libmpz_a-fdiv_q_ui.obj: fdiv_q_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_q_ui.obj `if test -f 'fdiv_q_ui.c'; then $(CYGPATH_W) 'fdiv_q_ui.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_q_ui.c'; fi`

libmpz_a-fdiv_qr.o: fdiv_qr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_qr.o `test -f 'fdiv_qr.c' || echo '$(srcdir)/'`fdiv_qr.c

libmpz_a-fdiv_qr.obj: fdiv_qr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_qr.obj `if test -f 'fdiv_qr.c'; then $(CYGPATH_W) 'fdiv_qr.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_qr.c'; fi`

libmpz_a-fdiv_qr_ui.o: fdiv_qr_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_qr_ui.o `test -f 'fdiv_qr_ui.c' || echo '$(srcdir)/'`fdiv_qr_ui.c

libmpz_a-fdiv_qr_ui.obj: fdiv_qr_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_qr_ui.obj `if test -f 'fdiv_qr_ui.c'; then $(CYGPATH_W) 'fdiv_qr_ui.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_qr_ui.c'; fi`

libmpz_a-fdiv_r.o: fdiv_r.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_r.o `test -f 'fdiv_r.c' || echo '$(srcdir)/'`fdiv_r.c

libmpz_a-fdiv_r.obj: fdiv_r.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_r.obj `if test -f 'fdiv_r.c'; then $(CYGPATH_W) 'fdiv_r.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_r.c'; fi`

libmpz_a-fdiv_r_ui.o: fdiv_r_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_r_ui.o `test -f 'fdiv_r_ui.c' || echo '$(srcdir)/'`fdiv_r_ui.c

libmpz_a-fdiv_r_ui.obj: fdiv_r_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_r_ui.obj `if test -f 'fdiv_r_ui.c'; then $(CYGPATH_W) 'fdiv_r_ui.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_r_ui.c'; fi`

libmpz_a-fdiv_ui.o: fdiv_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_ui.o `test -f 'fdiv_ui.c' || echo '$(srcdir)/'`fdiv_ui.c

libmpz_a-fdiv_ui.obj: fdiv_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fdiv_ui.obj `if test -f 'fdiv_ui.c'; then $(CYGPATH_W) 'fdiv_ui.c'; else $(CYGPATH_W) '$(srcdir)/fdiv_ui.c'; fi`

libmpz_a-fib_ui.o: fib_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fib_ui.o `test -f 'fib_ui.c' || echo '$(srcdir)/'`fib_ui.c

libmpz_a-fib_ui.obj: fib_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fib_ui.obj `if test -f 'fib_ui.c'; then $(CYGPATH_W) 'fib_ui.c'; else $(CYGPATH_W) '$(srcdir)/fib_ui.c'; fi`

libmpz_a-fib2_ui.o: fib2_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fib2_ui.o `test -f 'fib2_ui.c' || echo '$(srcdir)/'`fib2_ui.c

libmpz_a-fib2_ui.obj: fib2_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fib2_ui.obj `if test -f 'fib2_ui.c'; then $(CYGPATH_W) 'fib2_ui.c'; else $(CYGPATH_W) '$(srcdir)/fib2_ui.c'; fi`

libmpz_a-fits_sint.o: fits_sint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_sint.o `test -f 'fits_sint.c' || echo '$(srcdir)/'`fits_sint.c

libmpz_a-fits_sint.obj: fits_sint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_sint.obj `if test -f 'fits_sint.c'; then $(CYGPATH_W) 'fits_sint.c'; else $(CYGPATH_W) '$(srcdir)/fits_sint.c'; fi`

libmpz_a-fits_slong.o: fits_slong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_slong.o `test -f 'fits_slong.c' || echo '$(srcdir)/'`fits_slong.c

libmpz_a-fits_slong.obj: fits_slong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_slong.obj `if test -f 'fits_slong.c'; then $(CYGPATH_W) 'fits_slong.c'; else $(CYGPATH_W) '$(srcdir)/fits_slong.c'; fi`

libmpz_a-fits_sshort.o: fits_sshort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_sshort.o `test -f 'fits_sshort.c' || echo '$(srcdir)/'`fits_sshort.c

libmpz_a-fits_sshort.obj: fits_sshort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_sshort.obj `if test -f 'fits_sshort.c'; then $(CYGPATH_W) 'fits_sshort.c'; else $(CYGPATH_W) '$(srcdir)/fits_sshort.c'; fi`

libmpz_a-fits_uint.o: fits_uint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_uint.o `test -f 'fits_uint.c' || echo '$(srcdir)/'`fits_uint.c

libmpz_a-fits_uint.obj: fits_uint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_uint.obj `if test -f 'fits_uint.c'; then $(CYGPATH_W) 'fits_uint.c'; else $(CYGPATH_W) '$(srcdir)/fits_uint.c'; fi`

libmpz_a-fits_ulong.o: fits_ulong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_ulong.o `test -f 'fits_ulong.c' || echo '$(srcdir)/'`fits_ulong.c

libmpz_a-fits_ulong.obj: fits_ulong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_ulong.obj `if test -f 'fits_ulong.c'; then $(CYGPATH_W) 'fits_ulong.c'; else $(CYGPATH_W) '$(srcdir)/fits_ulong.c'; fi`

libmpz_a-fits_ushort.o: fits_ushort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_ushort.o `test -f 'fits_ushort.c' || echo '$(srcdir)/'`fits_ushort.c

libmpz_a-fits_ushort.obj: fits_ushort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-fits_ushort.obj `if test -f 'fits_ushort.c'; then $(CYGPATH_W) 'fits_ushort.c'; else $(CYGPATH_W) '$(srcdir)/fits_ushort.c'; fi`

libmpz_a-gcd.o: gcd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-gcd.o `test -f 'gcd.c' || echo '$(srcdir)/'`gcd.c

libmpz_a-gcd.obj: gcd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-gcd.obj `if test -f 'gcd.c'; then $(CYGPATH_W) 'gcd.c'; else $(CYGPATH_W) '$(srcdir)/gcd.c'; fi`

libmpz_a-gcd_ui.o: gcd_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-gcd_ui.o `test -f 'gcd_ui.c' || echo '$(srcdir)/'`gcd_ui.c

libmpz_a-gcd_ui.obj: gcd_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-gcd_ui.obj `if test -f 'gcd_ui.c'; then $(CYGPATH_W) 'gcd_ui.c'; else $(CYGPATH_W) '$(srcdir)/gcd_ui.c'; fi`

libmpz_a-gcdext.o: gcdext.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-gcdext.o `test -f 'gcdext.c' || echo '$(srcdir)/'`gcdext.c

libmpz_a-gcdext.obj: gcdext.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-gcdext.obj `if test -f 'gcdext.c'; then $(CYGPATH_W) 'gcdext.c'; else $(CYGPATH_W) '$(srcdir)/gcdext.c'; fi`

libmpz_a-get_d.o: get_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_d.o `test -f 'get_d.c' || echo '$(srcdir)/'`get_d.c

libmpz_a-get_d.obj: get_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_d.obj `if test -f 'get_d.c'; then $(CYGPATH_W) 'get_d.c'; else $(CYGPATH_W) '$(srcdir)/get_d.c'; fi`

libmpz_a-get_d_2exp.o: get_d_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_d_2exp.o `test -f 'get_d_2exp.c' || echo '$(srcdir)/'`get_d_2exp.c

libmpz_a-get_d_2exp.obj: get_d_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_d_2exp.obj `if test -f 'get_d_2exp.c'; then $(CYGPATH_W) 'get_d_2exp.c'; else $(CYGPATH_W) '$(srcdir)/get_d_2exp.c'; fi`

libmpz_a-get_si.o: get_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_si.o `test -f 'get_si.c' || echo '$(srcdir)/'`get_si.c

libmpz_a-get_si.obj: get_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_si.obj `if test -f 'get_si.c'; then $(CYGPATH_W) 'get_si.c'; else $(CYGPATH_W) '$(srcdir)/get_si.c'; fi`

libmpz_a-get_str.o: get_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_str.o `test -f 'get_str.c' || echo '$(srcdir)/'`get_str.c

libmpz_a-get_str.obj: get_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_str.obj `if test -f 'get_str.c'; then $(CYGPATH_W) 'get_str.c'; else $(CYGPATH_W) '$(srcdir)/get_str.c'; fi`

libmpz_a-get_ui.o: get_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_ui.o `test -f 'get_ui.c' || echo '$(srcdir)/'`get_ui.c

libmpz_a-get_ui.obj: get_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-get_ui.obj `if test -f 'get_ui.c'; then $(CYGPATH_W) 'get_ui.c'; else $(CYGPATH_W) '$(srcdir)/get_ui.c'; fi`

libmpz_a-getlimbn.o: getlimbn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-getlimbn.o `test -f 'getlimbn.c' || echo '$(srcdir)/'`getlimbn.c

libmpz_a-getlimbn.obj: getlimbn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-getlimbn.obj `if test -f 'getlimbn.c'; then $(CYGPATH_W) 'getlimbn.c'; else $(CYGPATH_W) '$(srcdir)/getlimbn.c'; fi`

libmpz_a-hamdist.o: hamdist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-hamdist.o `test -f 'hamdist.c' || echo '$(srcdir)/'`hamdist.c

libmpz_a-hamdist.obj: hamdist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-hamdist.obj `if test -f 'hamdist.c'; then $(CYGPATH_W) 'hamdist.c'; else $(CYGPATH_W) '$(srcdir)/hamdist.c'; fi`

libmpz_a-import.o: import.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-import.o `test -f 'import.c' || echo '$(srcdir)/'`import.c

libmpz_a-import.obj: import.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-import.obj `if test -f 'import.c'; then $(CYGPATH_W) 'import.c'; else $(CYGPATH_W) '$(srcdir)/import.c'; fi`

libmpz_a-init.o: init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c

libmpz_a-init.obj: init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`

libmpz_a-init2.o: init2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-init2.o `test -f 'init2.c' || echo '$(srcdir)/'`init2.c

libmpz_a-init2.obj: init2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-init2.obj `if test -f 'init2.c'; then $(CYGPATH_W) 'init2.c'; else $(CYGPATH_W) '$(srcdir)/init2.c'; fi`

libmpz_a-inits.o: inits.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-inits.o `test -f 'inits.c' || echo '$(srcdir)/'`inits.c

libmpz_a-inits.obj: inits.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-inits.obj `if test -f 'inits.c'; then $(CYGPATH_W) 'inits.c'; else $(CYGPATH_W) '$(srcdir)/inits.c'; fi`

libmpz_a-invert.o: invert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-invert.o `test -f 'invert.c' || echo '$(srcdir)/'`invert.c

libmpz_a-invert.obj: invert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-invert.obj `if test -f 'invert.c'; then $(CYGPATH_W) 'invert.c'; else $(CYGPATH_W) '$(srcdir)/invert.c'; fi`

libmpz_a-ior.o: ior.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-ior.o `test -f 'ior.c' || echo '$(srcdir)/'`ior.c

libmpz_a-ior.obj: ior.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-ior.obj `if test -f 'ior.c'; then $(CYGPATH_W) 'ior.c'; else $(CYGPATH_W) '$(srcdir)/ior.c'; fi`

libmpz_a-iset.o: iset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset.o `test -f 'iset.c' || echo '$(srcdir)/'`iset.c

libmpz_a-iset.obj: iset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset.obj `if test -f 'iset.c'; then $(CYGPATH_W) 'iset.c'; else $(CYGPATH_W) '$(srcdir)/iset.c'; fi`

libmpz_a-iset_d.o: iset_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_d.o `test -f 'iset_d.c' || echo '$(srcdir)/'`iset_d.c

libmpz_a-iset_d.obj: iset_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_d.obj `if test -f 'iset_d.c'; then $(CYGPATH_W) 'iset_d.c'; else $(CYGPATH_W) '$(srcdir)/iset_d.c'; fi`

libmpz_a-iset_si.o: iset_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_si.o `test -f 'iset_si.c' || echo '$(srcdir)/'`iset_si.c

libmpz_a-iset_si.obj: iset_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_si.obj `if test -f 'iset_si.c'; then $(CYGPATH_W) 'iset_si.c'; else $(CYGPATH_W) '$(srcdir)/iset_si.c'; fi`

libmpz_a-iset_str.o: iset_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_str.o `test -f 'iset_str.c' || echo '$(srcdir)/'`iset_str.c

libmpz_a-iset_str.obj: iset_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_str.obj `if test -f 'iset_str.c'; then $(CYGPATH_W) 'iset_str.c'; else $(CYGPATH_W) '$(srcdir)/iset_str.c'; fi`

libmpz_a-iset_ui.o: iset_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_ui.o `test -f 'iset_ui.c' || echo '$(srcdir)/'`iset_ui.c

libmpz_a-iset_ui.obj: iset_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-iset_ui.obj `if test -f 'iset_ui.c'; then $(CYGPATH_W) 'iset_ui.c'; else $(CYGPATH_W) '$(srcdir)/iset_ui.c'; fi`

libmpz_a-jacobi.o: jacobi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-jacobi.o `test -f 'jacobi.c' || echo '$(srcdir)/'`jacobi.c

libmpz_a-jacobi.obj: jacobi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-jacobi.obj `if test -f 'jacobi.c'; then $(CYGPATH_W) 'jacobi.c'; else $(CYGPATH_W) '$(srcdir)/jacobi.c'; fi`

libmpz_a-kronsz.o: kronsz.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronsz.o `test -f 'kronsz.c' || echo '$(srcdir)/'`kronsz.c

libmpz_a-kronsz.obj: kronsz.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronsz.obj `if test -f 'kronsz.c'; then $(CYGPATH_W) 'kronsz.c'; else $(CYGPATH_W) '$(srcdir)/kronsz.c'; fi`

libmpz_a-kronuz.o: kronuz.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronuz.o `test -f 'kronuz.c' || echo '$(srcdir)/'`kronuz.c

libmpz_a-kronuz.obj: kronuz.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronuz.obj `if test -f 'kronuz.c'; then $(CYGPATH_W) 'kronuz.c'; else $(CYGPATH_W) '$(srcdir)/kronuz.c'; fi`

libmpz_a-kronzs.o: kronzs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronzs.o `test -f 'kronzs.c' || echo '$(srcdir)/'`kronzs.c

libmpz_a-kronzs.obj: kronzs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronzs.obj `if test -f 'kronzs.c'; then $(CYGPATH_W) 'kronzs.c'; else $(CYGPATH_W) '$(srcdir)/kronzs.c'; fi`

libmpz_a-kronzu.o: kronzu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronzu.o `test -f 'kronzu.c' || echo '$(srcdir)/'`kronzu.c

libmpz_a-kronzu.obj: kronzu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-kronzu.obj `if test -f 'kronzu.c'; then $(CYGPATH_W) 'kronzu.c'; else $(CYGPATH_W) '$(srcdir)/kronzu.c'; fi`

libmpz_a-lcm.o: lcm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lcm.o `test -f 'lcm.c' || echo '$(srcdir)/'`lcm.c

libmpz_a-lcm.obj: lcm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lcm.obj `if test -f 'lcm.c'; then $(CYGPATH_W) 'lcm.c'; else $(CYGPATH_W) '$(srcdir)/lcm.c'; fi`

libmpz_a-lcm_ui.o: lcm_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lcm_ui.o `test -f 'lcm_ui.c' || echo '$(srcdir)/'`lcm_ui.c

libmpz_a-lcm_ui.obj: lcm_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lcm_ui.obj `if test -f 'lcm_ui.c'; then $(CYGPATH_W) 'lcm_ui.c'; else $(CYGPATH_W) '$(srcdir)/lcm_ui.c'; fi`

libmpz_a-limbs_read.o: limbs_read.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_read.o `test -f 'limbs_read.c' || echo '$(srcdir)/'`limbs_read.c

libmpz_a-limbs_read.obj: limbs_read.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_read.obj `if test -f 'limbs_read.c'; then $(CYGPATH_W) 'limbs_read.c'; else $(CYGPATH_W) '$(srcdir)/limbs_read.c'; fi`

libmpz_a-limbs_write.o: limbs_write.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_write.o `test -f 'limbs_write.c' || echo '$(srcdir)/'`limbs_write.c

libmpz_a-limbs_write.obj: limbs_write.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_write.obj `if test -f 'limbs_write.c'; then $(CYGPATH_W) 'limbs_write.c'; else $(CYGPATH_W) '$(srcdir)/limbs_write.c'; fi`

libmpz_a-limbs_modify.o: limbs_modify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_modify.o `test -f 'limbs_modify.c' || echo '$(srcdir)/'`limbs_modify.c

libmpz_a-limbs_modify.obj: limbs_modify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_modify.obj `if test -f 'limbs_modify.c'; then $(CYGPATH_W) 'limbs_modify.c'; else $(CYGPATH_W) '$(srcdir)/limbs_modify.c'; fi`

libmpz_a-limbs_finish.o: limbs_finish.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_finish.o `test -f 'limbs_finish.c' || echo '$(srcdir)/'`limbs_finish.c

libmpz_a-limbs_finish.obj: limbs_finish.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-limbs_finish.obj `if test -f 'limbs_finish.c'; then $(CYGPATH_W) 'limbs_finish.c'; else $(CYGPATH_W) '$(srcdir)/limbs_finish.c'; fi`

libmpz_a-lucnum_ui.o: lucnum_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lucnum_ui.o `test -f 'lucnum_ui.c' || echo '$(srcdir)/'`lucnum_ui.c

libmpz_a-lucnum_ui.obj: lucnum_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lucnum_ui.obj `if test -f 'lucnum_ui.c'; then $(CYGPATH_W) 'lucnum_ui.c'; else $(CYGPATH_W) '$(srcdir)/lucnum_ui.c'; fi`

libmpz_a-lucnum2_ui.o: lucnum2_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lucnum2_ui.o `test -f 'lucnum2_ui.c' || echo '$(srcdir)/'`lucnum2_ui.c

libmpz_a-lucnum2_ui.obj: lucnum2_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-lucnum2_ui.obj `if test -f 'lucnum2_ui.c'; then $(CYGPATH_W) 'lucnum2_ui.c'; else $(CYGPATH_W) '$(srcdir)/lucnum2_ui.c'; fi`

libmpz_a-mfac_uiui.o: mfac_uiui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mfac_uiui.o `test -f 'mfac_uiui.c' || echo '$(srcdir)/'`mfac_uiui.c

libmpz_a-mfac_uiui.obj: mfac_uiui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mfac_uiui.obj `if test -f 'mfac_uiui.c'; then $(CYGPATH_W) 'mfac_uiui.c'; else $(CYGPATH_W) '$(srcdir)/mfac_uiui.c'; fi`

libmpz_a-millerrabin.o: millerrabin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-millerrabin.o `test -f 'millerrabin.c' || echo '$(srcdir)/'`millerrabin.c

libmpz_a-millerrabin.obj: millerrabin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-millerrabin.obj `if test -f 'millerrabin.c'; then $(CYGPATH_W) 'millerrabin.c'; else $(CYGPATH_W) '$(srcdir)/millerrabin.c'; fi`

libmpz_a-mod.o: mod.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mod.o `test -f 'mod.c' || echo '$(srcdir)/'`mod.c

libmpz_a-mod.obj: mod.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mod.obj `if test -f 'mod.c'; then $(CYGPATH_W) 'mod.c'; else $(CYGPATH_W) '$(srcdir)/mod.c'; fi`

libmpz_a-mul.o: mul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul.o `test -f 'mul.c' || echo '$(srcdir)/'`mul.c

libmpz_a-mul.obj: mul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul.obj `if test -f 'mul.c'; then $(CYGPATH_W) 'mul.c'; else $(CYGPATH_W) '$(srcdir)/mul.c'; fi`

libmpz_a-mul_2exp.o: mul_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul_2exp.o `test -f 'mul_2exp.c' || echo '$(srcdir)/'`mul_2exp.c

libmpz_a-mul_2exp.obj: mul_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul_2exp.obj `if test -f 'mul_2exp.c'; then $(CYGPATH_W) 'mul_2exp.c'; else $(CYGPATH_W) '$(srcdir)/mul_2exp.c'; fi`

libmpz_a-mul_si.o: mul_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul_si.o `test -f 'mul_si.c' || echo '$(srcdir)/'`mul_si.c

libmpz_a-mul_si.obj: mul_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul_si.obj `if test -f 'mul_si.c'; then $(CYGPATH_W) 'mul_si.c'; else $(CYGPATH_W) '$(srcdir)/mul_si.c'; fi`

libmpz_a-mul_ui.o: mul_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul_ui.o `test -f 'mul_ui.c' || echo '$(srcdir)/'`mul_ui.c

libmpz_a-mul_ui.obj: mul_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-mul_ui.obj `if test -f 'mul_ui.c'; then $(CYGPATH_W) 'mul_ui.c'; else $(CYGPATH_W) '$(srcdir)/mul_ui.c'; fi`

libmpz_a-n_pow_ui.o: n_pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-n_pow_ui.o `test -f 'n_pow_ui.c' || echo '$(srcdir)/'`n_pow_ui.c

libmpz_a-n_pow_ui.obj: n_pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-n_pow_ui.obj `if test -f 'n_pow_ui.c'; then $(CYGPATH_W) 'n_pow_ui.c'; else $(CYGPATH_W) '$(srcdir)/n_pow_ui.c'; fi`

libmpz_a-neg.o: neg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-neg.o `test -f 'neg.c' || echo '$(srcdir)/'`neg.c

libmpz_a-neg.obj: neg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-neg.obj `if test -f 'neg.c'; then $(CYGPATH_W) 'neg.c'; else $(CYGPATH_W) '$(srcdir)/neg.c'; fi`

libmpz_a-nextprime.o: nextprime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-nextprime.o `test -f 'nextprime.c' || echo '$(srcdir)/'`nextprime.c

libmpz_a-nextprime.obj: nextprime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-nextprime.obj `if test -f 'nextprime.c'; then $(CYGPATH_W) 'nextprime.c'; else $(CYGPATH_W) '$(srcdir)/nextprime.c'; fi`

libmpz_a-oddfac_1.o: oddfac_1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-oddfac_1.o `test -f 'oddfac_1.c' || echo '$(srcdir)/'`oddfac_1.c

libmpz_a-oddfac_1.obj: oddfac_1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-oddfac_1.obj `if test -f 'oddfac_1.c'; then $(CYGPATH_W) 'oddfac_1.c'; else $(CYGPATH_W) '$(srcdir)/oddfac_1.c'; fi`

libmpz_a-perfpow.o: perfpow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-perfpow.o `test -f 'perfpow.c' || echo '$(srcdir)/'`perfpow.c

libmpz_a-perfpow.obj: perfpow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-perfpow.obj `if test -f 'perfpow.c'; then $(CYGPATH_W) 'perfpow.c'; else $(CYGPATH_W) '$(srcdir)/perfpow.c'; fi`

libmpz_a-perfsqr.o: perfsqr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-perfsqr.o `test -f 'perfsqr.c' || echo '$(srcdir)/'`perfsqr.c

libmpz_a-perfsqr.obj: perfsqr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-perfsqr.obj `if test -f 'perfsqr.c'; then $(CYGPATH_W) 'perfsqr.c'; else $(CYGPATH_W) '$(srcdir)/perfsqr.c'; fi`

libmpz_a-popcount.o: popcount.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-popcount.o `test -f 'popcount.c' || echo '$(srcdir)/'`popcount.c

libmpz_a-popcount.obj: popcount.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-popcount.obj `if test -f 'popcount.c'; then $(CYGPATH_W) 'popcount.c'; else $(CYGPATH_W) '$(srcdir)/popcount.c'; fi`

libmpz_a-pow_ui.o: pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-pow_ui.o `test -f 'pow_ui.c' || echo '$(srcdir)/'`pow_ui.c

libmpz_a-pow_ui.obj: pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-pow_ui.obj `if test -f 'pow_ui.c'; then $(CYGPATH_W) 'pow_ui.c'; else $(CYGPATH_W) '$(srcdir)/pow_ui.c'; fi`

libmpz_a-powm.o: powm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-powm.o `test -f 'powm.c' || echo '$(srcdir)/'`powm.c

libmpz_a-powm.obj: powm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-powm.obj `if test -f 'powm.c'; then $(CYGPATH_W) 'powm.c'; else $(CYGPATH_W) '$(srcdir)/powm.c'; fi`

libmpz_a-powm_sec.o: powm_sec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-powm_sec.o `test -f 'powm_sec.c' || echo '$(srcdir)/'`powm_sec.c

libmpz_a-powm_sec.obj: powm_sec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-powm_sec.obj `if test -f 'powm_sec.c'; then $(CYGPATH_W) 'powm_sec.c'; else $(CYGPATH_W) '$(srcdir)/powm_sec.c'; fi`

libmpz_a-powm_ui.o: powm_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-powm_ui.o `test -f 'powm_ui.c' || echo '$(srcdir)/'`powm_ui.c

libmpz_a-powm_ui.obj: powm_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-powm_ui.obj `if test -f 'powm_ui.c'; then $(CYGPATH_W) 'powm_ui.c'; else $(CYGPATH_W) '$(srcdir)/powm_ui.c'; fi`

libmpz_a-pprime_p.o: pprime_p.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-pprime_p.o `test -f 'pprime_p.c' || echo '$(srcdir)/'`pprime_p.c

libmpz_a-pprime_p.obj: pprime_p.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-pprime_p.obj `if test -f 'pprime_p.c'; then $(CYGPATH_W) 'pprime_p.c'; else $(CYGPATH_W) '$(srcdir)/pprime_p.c'; fi`

libmpz_a-prodlimbs.o: prodlimbs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-prodlimbs.o `test -f 'prodlimbs.c' || echo '$(srcdir)/'`prodlimbs.c

libmpz_a-prodlimbs.obj: prodlimbs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-prodlimbs.obj `if test -f 'prodlimbs.c'; then $(CYGPATH_W) 'prodlimbs.c'; else $(CYGPATH_W) '$(srcdir)/prodlimbs.c'; fi`

libmpz_a-primorial_ui.o: primorial_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-primorial_ui.o `test -f 'primorial_ui.c' || echo '$(srcdir)/'`primorial_ui.c

libmpz_a-primorial_ui.obj: primorial_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-primorial_ui.obj `if test -f 'primorial_ui.c'; then $(CYGPATH_W) 'primorial_ui.c'; else $(CYGPATH_W) '$(srcdir)/primorial_ui.c'; fi`

libmpz_a-random.o: random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-random.o `test -f 'random.c' || echo '$(srcdir)/'`random.c

libmpz_a-random.obj: random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-random.obj `if test -f 'random.c'; then $(CYGPATH_W) 'random.c'; else $(CYGPATH_W) '$(srcdir)/random.c'; fi`

libmpz_a-random2.o: random2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-random2.o `test -f 'random2.c' || echo '$(srcdir)/'`random2.c

libmpz_a-random2.obj: random2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-random2.obj `if test -f 'random2.c'; then $(CYGPATH_W) 'random2.c'; else $(CYGPATH_W) '$(srcdir)/random2.c'; fi`

libmpz_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libmpz_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libmpz_a-realloc2.o: realloc2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-realloc2.o `test -f 'realloc2.c' || echo '$(srcdir)/'`realloc2.c

libmpz_a-realloc2.obj: realloc2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-realloc2.obj `if test -f 'realloc2.c'; then $(CYGPATH_W) 'realloc2.c'; else $(CYGPATH_W) '$(srcdir)/realloc2.c'; fi`

libmpz_a-remove.o: remove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-remove.o `test -f 'remove.c' || echo '$(srcdir)/'`remove.c

libmpz_a-remove.obj: remove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-remove.obj `if test -f 'remove.c'; then $(CYGPATH_W) 'remove.c'; else $(CYGPATH_W) '$(srcdir)/remove.c'; fi`

libmpz_a-roinit_n.o: roinit_n.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-roinit_n.o `test -f 'roinit_n.c' || echo '$(srcdir)/'`roinit_n.c

libmpz_a-roinit_n.obj: roinit_n.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-roinit_n.obj `if test -f 'roinit_n.c'; then $(CYGPATH_W) 'roinit_n.c'; else $(CYGPATH_W) '$(srcdir)/roinit_n.c'; fi`

libmpz_a-root.o: root.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-root.o `test -f 'root.c' || echo '$(srcdir)/'`root.c

libmpz_a-root.obj: root.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-root.obj `if test -f 'root.c'; then $(CYGPATH_W) 'root.c'; else $(CYGPATH_W) '$(srcdir)/root.c'; fi`

libmpz_a-rootrem.o: rootrem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-rootrem.o `test -f 'rootrem.c' || echo '$(srcdir)/'`rootrem.c

libmpz_a-rootrem.obj: rootrem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-rootrem.obj `if test -f 'rootrem.c'; then $(CYGPATH_W) 'rootrem.c'; else $(CYGPATH_W) '$(srcdir)/rootrem.c'; fi`

libmpz_a-rrandomb.o: rrandomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-rrandomb.o `test -f 'rrandomb.c' || echo '$(srcdir)/'`rrandomb.c

libmpz_a-rrandomb.obj: rrandomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-rrandomb.obj `if test -f 'rrandomb.c'; then $(CYGPATH_W) 'rrandomb.c'; else $(CYGPATH_W) '$(srcdir)/rrandomb.c'; fi`

libmpz_a-scan0.o: scan0.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-scan0.o `test -f 'scan0.c' || echo '$(srcdir)/'`scan0.c

libmpz_a-scan0.obj: scan0.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-scan0.obj `if test -f 'scan0.c'; then $(CYGPATH_W) 'scan0.c'; else $(CYGPATH_W) '$(srcdir)/scan0.c'; fi`

libmpz_a-scan1.o: scan1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-scan1.o `test -f 'scan1.c' || echo '$(srcdir)/'`scan1.c

libmpz_a-scan1.obj: scan1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-scan1.obj `if test -f 'scan1.c'; then $(CYGPATH_W) 'scan1.c'; else $(CYGPATH_W) '$(srcdir)/scan1.c'; fi`

libmpz_a-set.o: set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set.o `test -f 'set.c' || echo '$(srcdir)/'`set.c

libmpz_a-set.obj: set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set.obj `if test -f 'set.c'; then $(CYGPATH_W) 'set.c'; else $(CYGPATH_W) '$(srcdir)/set.c'; fi`

libmpz_a-set_d.o: set_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_d.o `test -f 'set_d.c' || echo '$(srcdir)/'`set_d.c

libmpz_a-set_d.obj: set_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_d.obj `if test -f 'set_d.c'; then $(CYGPATH_W) 'set_d.c'; else $(CYGPATH_W) '$(srcdir)/set_d.c'; fi`

libmpz_a-set_f.o: set_f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_f.o `test -f 'set_f.c' || echo '$(srcdir)/'`set_f.c

libmpz_a-set_f.obj: set_f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_f.obj `if test -f 'set_f.c'; then $(CYGPATH_W) 'set_f.c'; else $(CYGPATH_W) '$(srcdir)/set_f.c'; fi`

libmpz_a-set_q.o: set_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_q.o `test -f 'set_q.c' || echo '$(srcdir)/'`set_q.c

libmpz_a-set_q.obj: set_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_q.obj `if test -f 'set_q.c'; then $(CYGPATH_W) 'set_q.c'; else $(CYGPATH_W) '$(srcdir)/set_q.c'; fi`

libmpz_a-set_si.o: set_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_si.o `test -f 'set_si.c' || echo '$(srcdir)/'`set_si.c

libmpz_a-set_si.obj: set_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_si.obj `if test -f 'set_si.c'; then $(CYGPATH_W) 'set_si.c'; else $(CYGPATH_W) '$(srcdir)/set_si.c'; fi`

libmpz_a-set_str.o: set_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_str.o `test -f 'set_str.c' || echo '$(srcdir)/'`set_str.c

libmpz_a-set_str.obj: set_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_str.obj `if test -f 'set_str.c'; then $(CYGPATH_W) 'set_str.c'; else $(CYGPATH_W) '$(srcdir)/set_str.c'; fi`

libmpz_a-set_ui.o: set_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_ui.o `test -f 'set_ui.c' || echo '$(srcdir)/'`set_ui.c

libmpz_a-set_ui.obj: set_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-set_ui.obj `if test -f 'set_ui.c'; then $(CYGPATH_W) 'set_ui.c'; else $(CYGPATH_W) '$(srcdir)/set_ui.c'; fi`

libmpz_a-setbit.o: setbit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-setbit.o `test -f 'setbit.c' || echo '$(srcdir)/'`setbit.c

libmpz_a-setbit.obj: setbit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-setbit.obj `if test -f 'setbit.c'; then $(CYGPATH_W) 'setbit.c'; else $(CYGPATH_W) '$(srcdir)/setbit.c'; fi`

libmpz_a-size.o: size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-size.o `test -f 'size.c' || echo '$(srcdir)/'`size.c

libmpz_a-size.obj: size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-size.obj `if test -f 'size.c'; then $(CYGPATH_W) 'size.c'; else $(CYGPATH_W) '$(srcdir)/size.c'; fi`

libmpz_a-sizeinbase.o: sizeinbase.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sizeinbase.o `test -f 'sizeinbase.c' || echo '$(srcdir)/'`sizeinbase.c

libmpz_a-sizeinbase.obj: sizeinbase.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sizeinbase.obj `if test -f 'sizeinbase.c'; then $(CYGPATH_W) 'sizeinbase.c'; else $(CYGPATH_W) '$(srcdir)/sizeinbase.c'; fi`

libmpz_a-sqrt.o: sqrt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sqrt.o `test -f 'sqrt.c' || echo '$(srcdir)/'`sqrt.c

libmpz_a-sqrt.obj: sqrt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sqrt.obj `if test -f 'sqrt.c'; then $(CYGPATH_W) 'sqrt.c'; else $(CYGPATH_W) '$(srcdir)/sqrt.c'; fi`

libmpz_a-sqrtrem.o: sqrtrem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sqrtrem.o `test -f 'sqrtrem.c' || echo '$(srcdir)/'`sqrtrem.c

libmpz_a-sqrtrem.obj: sqrtrem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sqrtrem.obj `if test -f 'sqrtrem.c'; then $(CYGPATH_W) 'sqrtrem.c'; else $(CYGPATH_W) '$(srcdir)/sqrtrem.c'; fi`

libmpz_a-sub.o: sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sub.o `test -f 'sub.c' || echo '$(srcdir)/'`sub.c

libmpz_a-sub.obj: sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sub.obj `if test -f 'sub.c'; then $(CYGPATH_W) 'sub.c'; else $(CYGPATH_W) '$(srcdir)/sub.c'; fi`

libmpz_a-sub_ui.o: sub_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sub_ui.o `test -f 'sub_ui.c' || echo '$(srcdir)/'`sub_ui.c

libmpz_a-sub_ui.obj: sub_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-sub_ui.obj `if test -f 'sub_ui.c'; then $(CYGPATH_W) 'sub_ui.c'; else $(CYGPATH_W) '$(srcdir)/sub_ui.c'; fi`

libmpz_a-swap.o: swap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-swap.o `test -f 'swap.c' || echo '$(srcdir)/'`swap.c

libmpz_a-swap.obj: swap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-swap.obj `if test -f 'swap.c'; then $(CYGPATH_W) 'swap.c'; else $(CYGPATH_W) '$(srcdir)/swap.c'; fi`

libmpz_a-tdiv_ui.o: tdiv_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_ui.o `test -f 'tdiv_ui.c' || echo '$(srcdir)/'`tdiv_ui.c

libmpz_a-tdiv_ui.obj: tdiv_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_ui.obj `if test -f 'tdiv_ui.c'; then $(CYGPATH_W) 'tdiv_ui.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_ui.c'; fi`

libmpz_a-tdiv_q.o: tdiv_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_q.o `test -f 'tdiv_q.c' || echo '$(srcdir)/'`tdiv_q.c

libmpz_a-tdiv_q.obj: tdiv_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_q.obj `if test -f 'tdiv_q.c'; then $(CYGPATH_W) 'tdiv_q.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_q.c'; fi`

libmpz_a-tdiv_q_2exp.o: tdiv_q_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_q_2exp.o `test -f 'tdiv_q_2exp.c' || echo '$(srcdir)/'`tdiv_q_2exp.c

libmpz_a-tdiv_q_2exp.obj: tdiv_q_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_q_2exp.obj `if test -f 'tdiv_q_2exp.c'; then $(CYGPATH_W) 'tdiv_q_2exp.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_q_2exp.c'; fi`

libmpz_a-tdiv_q_ui.o: tdiv_q_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_q_ui.o `test -f 'tdiv_q_ui.c' || echo '$(srcdir)/'`tdiv_q_ui.c

libmpz_a-tdiv_q_ui.obj: tdiv_q_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_q_ui.obj `if test -f 'tdiv_q_ui.c'; then $(CYGPATH_W) 'tdiv_q_ui.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_q_ui.c'; fi`

libmpz_a-tdiv_qr.o: tdiv_qr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_qr.o `test -f 'tdiv_qr.c' || echo '$(srcdir)/'`tdiv_qr.c

libmpz_a-tdiv_qr.obj: tdiv_qr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_qr.obj `if test -f 'tdiv_qr.c'; then $(CYGPATH_W) 'tdiv_qr.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_qr.c'; fi`

libmpz_a-tdiv_qr_ui.o: tdiv_qr_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_qr_ui.o `test -f 'tdiv_qr_ui.c' || echo '$(srcdir)/'`tdiv_qr_ui.c

libmpz_a-tdiv_qr_ui.obj: tdiv_qr_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_qr_ui.obj `if test -f 'tdiv_qr_ui.c'; then $(CYGPATH_W) 'tdiv_qr_ui.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_qr_ui.c'; fi`

libmpz_a-tdiv_r.o: tdiv_r.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_r.o `test -f 'tdiv_r.c' || echo '$(srcdir)/'`tdiv_r.c

libmpz_a-tdiv_r.obj: tdiv_r.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_r.obj `if test -f 'tdiv_r.c'; then $(CYGPATH_W) 'tdiv_r.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_r.c'; fi`

libmpz_a-tdiv_r_2exp.o: tdiv_r_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_r_2exp.o `test -f 'tdiv_r_2exp.c' || echo '$(srcdir)/'`tdiv_r_2exp.c

libmpz_a-tdiv_r_2exp.obj: tdiv_r_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_r_2exp.obj `if test -f 'tdiv_r_2exp.c'; then $(CYGPATH_W) 'tdiv_r_2exp.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_r_2exp.c'; fi`

libmpz_a-tdiv_r_ui.o: tdiv_r_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_r_ui.o `test -f 'tdiv_r_ui.c' || echo '$(srcdir)/'`tdiv_r_ui.c

libmpz_a-tdiv_r_ui.obj: tdiv_r_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tdiv_r_ui.obj `if test -f 'tdiv_r_ui.c'; then $(CYGPATH_W) 'tdiv_r_ui.c'; else $(CYGPATH_W) '$(srcdir)/tdiv_r_ui.c'; fi`

libmpz_a-tstbit.o: tstbit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tstbit.o `test -f 'tstbit.c' || echo '$(srcdir)/'`tstbit.c

libmpz_a-tstbit.obj: tstbit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-tstbit.obj `if test -f 'tstbit.c'; then $(CYGPATH_W) 'tstbit.c'; else $(CYGPATH_W) '$(srcdir)/tstbit.c'; fi`

libmpz_a-ui_pow_ui.o: ui_pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-ui_pow_ui.o `test -f 'ui_pow_ui.c' || echo '$(srcdir)/'`ui_pow_ui.c

libmpz_a-ui_pow_ui.obj: ui_pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-ui_pow_ui.obj `if test -f 'ui_pow_ui.c'; then $(CYGPATH_W) 'ui_pow_ui.c'; else $(CYGPATH_W) '$(srcdir)/ui_pow_ui.c'; fi`

libmpz_a-ui_sub.o: ui_sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-ui_sub.o `test -f 'ui_sub.c' || echo '$(srcdir)/'`ui_sub.c

libmpz_a-ui_sub.obj: ui_sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-ui_sub.obj `if test -f 'ui_sub.c'; then $(CYGPATH_W) 'ui_sub.c'; else $(CYGPATH_W) '$(srcdir)/ui_sub.c'; fi`

libmpz_a-urandomb.o: urandomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-urandomb.o `test -f 'urandomb.c' || echo '$(srcdir)/'`urandomb.c

libmpz_a-urandomb.obj: urandomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-urandomb.obj `if test -f 'urandomb.c'; then $(CYGPATH_W) 'urandomb.c'; else $(CYGPATH_W) '$(srcdir)/urandomb.c'; fi`

libmpz_a-urandomm.o: urandomm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-urandomm.o `test -f 'urandomm.c' || echo '$(srcdir)/'`urandomm.c

libmpz_a-urandomm.obj: urandomm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-urandomm.obj `if test -f 'urandomm.c'; then $(CYGPATH_W) 'urandomm.c'; else $(CYGPATH_W) '$(srcdir)/urandomm.c'; fi`

libmpz_a-xor.o: xor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-xor.o `test -f 'xor.c' || echo '$(srcdir)/'`xor.c

libmpz_a-xor.obj: xor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpz_a_CFLAGS) $(CFLAGS) -c -o libmpz_a-xor.obj `if test -f 'xor.c'; then $(CYGPATH_W) 'xor.c'; else $(CYGPATH_W) '$(srcdir)/xor.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


%_t.h %_t.c: %.edl
	$(SGX_EDGER8R) --search-path $(SGXSDK_INCDIR) $(SGX_EDGER8R_FLAGS) --trusted $<

#
#------------------------------------------------------------

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
