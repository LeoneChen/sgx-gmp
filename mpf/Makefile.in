# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 1996, 1998-2002 Free Software Foundation, Inc.
#
#  This file is part of the GNU MP Library.
#
#  The GNU MP Library is free software; you can redistribute it and/or modify
#  it under the terms of either:
#
#    * the GNU Lesser General Public License as published by the Free
#      Software Foundation; either version 3 of the License, or (at your
#      option) any later version.
#
#  or
#
#    * the GNU General Public License as published by the Free Software
#      Foundation; either version 2 of the License, or (at your option) any
#      later version.
#
#  or both in parallel, as here.
#
#  The GNU MP Library is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#  for more details.
#
#  You should have received copies of the GNU General Public License and the
#  GNU Lesser General Public License along with the GNU MP Library.  If not,
#  see https://www.gnu.org/licenses/.


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = mpf
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/sgx_init.m4 \
	$(top_srcdir)/m4/sgx_init_optional.m4 \
	$(top_srcdir)/m4/sgx_tstdc_check.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libmpf_a_AR = $(AR) $(ARFLAGS)
libmpf_a_LIBADD =
am__libmpf_a_SOURCES_DIST = init.c init2.c inits.c set.c set_ui.c \
	set_si.c set_str.c set_d.c set_z.c set_q.c iset.c iset_ui.c \
	iset_si.c iset_str.c iset_d.c clear.c clears.c get_str.c \
	dump.c size.c eq.c reldiff.c sqrt.c random2.c add.c add_ui.c \
	sub.c sub_ui.c ui_sub.c mul.c mul_ui.c div.c div_ui.c cmp.c \
	cmp_d.c cmp_z.c cmp_si.c cmp_ui.c mul_2exp.c div_2exp.c abs.c \
	neg.c get_d.c get_d_2exp.c set_dfl_prec.c set_prc.c \
	set_prc_raw.c get_dfl_prec.c get_prc.c ui_div.c sqrt_ui.c \
	pow_ui.c urandomb.c swap.c get_si.c get_ui.c int_p.c \
	ceilfloor.c trunc.c fits_sint.c fits_slong.c fits_sshort.c \
	fits_uint.c fits_ulong.c fits_ushort.c fits_s.h fits_u.h
am__objects_1 = libmpf_a-init.$(OBJEXT) libmpf_a-init2.$(OBJEXT) \
	libmpf_a-inits.$(OBJEXT) libmpf_a-set.$(OBJEXT) \
	libmpf_a-set_ui.$(OBJEXT) libmpf_a-set_si.$(OBJEXT) \
	libmpf_a-set_str.$(OBJEXT) libmpf_a-set_d.$(OBJEXT) \
	libmpf_a-set_z.$(OBJEXT) libmpf_a-set_q.$(OBJEXT) \
	libmpf_a-iset.$(OBJEXT) libmpf_a-iset_ui.$(OBJEXT) \
	libmpf_a-iset_si.$(OBJEXT) libmpf_a-iset_str.$(OBJEXT) \
	libmpf_a-iset_d.$(OBJEXT) libmpf_a-clear.$(OBJEXT) \
	libmpf_a-clears.$(OBJEXT) libmpf_a-get_str.$(OBJEXT) \
	libmpf_a-dump.$(OBJEXT) libmpf_a-size.$(OBJEXT) \
	libmpf_a-eq.$(OBJEXT) libmpf_a-reldiff.$(OBJEXT) \
	libmpf_a-sqrt.$(OBJEXT) libmpf_a-random2.$(OBJEXT) \
	libmpf_a-add.$(OBJEXT) libmpf_a-add_ui.$(OBJEXT) \
	libmpf_a-sub.$(OBJEXT) libmpf_a-sub_ui.$(OBJEXT) \
	libmpf_a-ui_sub.$(OBJEXT) libmpf_a-mul.$(OBJEXT) \
	libmpf_a-mul_ui.$(OBJEXT) libmpf_a-div.$(OBJEXT) \
	libmpf_a-div_ui.$(OBJEXT) libmpf_a-cmp.$(OBJEXT) \
	libmpf_a-cmp_d.$(OBJEXT) libmpf_a-cmp_z.$(OBJEXT) \
	libmpf_a-cmp_si.$(OBJEXT) libmpf_a-cmp_ui.$(OBJEXT) \
	libmpf_a-mul_2exp.$(OBJEXT) libmpf_a-div_2exp.$(OBJEXT) \
	libmpf_a-abs.$(OBJEXT) libmpf_a-neg.$(OBJEXT) \
	libmpf_a-get_d.$(OBJEXT) libmpf_a-get_d_2exp.$(OBJEXT) \
	libmpf_a-set_dfl_prec.$(OBJEXT) libmpf_a-set_prc.$(OBJEXT) \
	libmpf_a-set_prc_raw.$(OBJEXT) libmpf_a-get_dfl_prec.$(OBJEXT) \
	libmpf_a-get_prc.$(OBJEXT) libmpf_a-ui_div.$(OBJEXT) \
	libmpf_a-sqrt_ui.$(OBJEXT) libmpf_a-pow_ui.$(OBJEXT) \
	libmpf_a-urandomb.$(OBJEXT) libmpf_a-swap.$(OBJEXT) \
	libmpf_a-get_si.$(OBJEXT) libmpf_a-get_ui.$(OBJEXT) \
	libmpf_a-int_p.$(OBJEXT) libmpf_a-ceilfloor.$(OBJEXT) \
	libmpf_a-trunc.$(OBJEXT) libmpf_a-fits_sint.$(OBJEXT) \
	libmpf_a-fits_slong.$(OBJEXT) libmpf_a-fits_sshort.$(OBJEXT) \
	libmpf_a-fits_uint.$(OBJEXT) libmpf_a-fits_ulong.$(OBJEXT) \
	libmpf_a-fits_ushort.$(OBJEXT)
@SGX_ENABLED_TRUE@am_libmpf_a_OBJECTS = $(am__objects_1)
libmpf_a_OBJECTS = $(am_libmpf_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libmpf_la_LIBADD =
am__libmpf_la_SOURCES_DIST = init.c init2.c inits.c set.c set_ui.c \
	set_si.c set_str.c set_d.c set_z.c set_q.c iset.c iset_ui.c \
	iset_si.c iset_str.c iset_d.c clear.c clears.c get_str.c \
	dump.c size.c eq.c reldiff.c sqrt.c random2.c add.c add_ui.c \
	sub.c sub_ui.c ui_sub.c mul.c mul_ui.c div.c div_ui.c cmp.c \
	cmp_d.c cmp_z.c cmp_si.c cmp_ui.c mul_2exp.c div_2exp.c abs.c \
	neg.c get_d.c get_d_2exp.c set_dfl_prec.c set_prc.c \
	set_prc_raw.c get_dfl_prec.c get_prc.c ui_div.c sqrt_ui.c \
	pow_ui.c urandomb.c swap.c get_si.c get_ui.c int_p.c \
	ceilfloor.c trunc.c fits_sint.c fits_slong.c fits_sshort.c \
	fits_uint.c fits_ulong.c fits_ushort.c fits_s.h fits_u.h
am__objects_2 = init.lo init2.lo inits.lo set.lo set_ui.lo set_si.lo \
	set_str.lo set_d.lo set_z.lo set_q.lo iset.lo iset_ui.lo \
	iset_si.lo iset_str.lo iset_d.lo clear.lo clears.lo get_str.lo \
	dump.lo size.lo eq.lo reldiff.lo sqrt.lo random2.lo add.lo \
	add_ui.lo sub.lo sub_ui.lo ui_sub.lo mul.lo mul_ui.lo div.lo \
	div_ui.lo cmp.lo cmp_d.lo cmp_z.lo cmp_si.lo cmp_ui.lo \
	mul_2exp.lo div_2exp.lo abs.lo neg.lo get_d.lo get_d_2exp.lo \
	set_dfl_prec.lo set_prc.lo set_prc_raw.lo get_dfl_prec.lo \
	get_prc.lo ui_div.lo sqrt_ui.lo pow_ui.lo urandomb.lo swap.lo \
	get_si.lo get_ui.lo int_p.lo ceilfloor.lo trunc.lo \
	fits_sint.lo fits_slong.lo fits_sshort.lo fits_uint.lo \
	fits_ulong.lo fits_ushort.lo
@SGX_ENABLED_FALSE@am_libmpf_la_OBJECTS = $(am__objects_2)
libmpf_la_OBJECTS = $(am_libmpf_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
@SGX_ENABLED_FALSE@am_libmpf_la_rpath =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmpf_a_SOURCES) $(libmpf_la_SOURCES)
DIST_SOURCES = $(am__libmpf_a_SOURCES_DIST) \
	$(am__libmpf_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/sgx_tlib.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI = @ABI@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
ASMFLAGS = @ASMFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CALLING_CONVENTIONS_OBJS = @CALLING_CONVENTIONS_OBJS@
CC = @CC@
CCAS = @CCAS@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CFLAGS_CPU = @CFLAGS_CPU@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPP_FOR_BUILD = @CPP_FOR_BUILD@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFN_LONG_LONG_LIMB = @DEFN_LONG_LONG_LIMB@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENCLAVE_SIGN_TARGET = @ENCLAVE_SIGN_TARGET@
EXEEXT = @EXEEXT@
EXEEXT_FOR_BUILD = @EXEEXT_FOR_BUILD@
FGREP = @FGREP@
GMP_LDFLAGS = @GMP_LDFLAGS@
GMP_LIMB_BITS = @GMP_LIMB_BITS@
GMP_NAIL_BITS = @GMP_NAIL_BITS@
GMP_WITH_SGX = @GMP_WITH_SGX@
GREP = @GREP@
HAVE_CLOCK_01 = @HAVE_CLOCK_01@
HAVE_CPUTIME_01 = @HAVE_CPUTIME_01@
HAVE_GETRUSAGE_01 = @HAVE_GETRUSAGE_01@
HAVE_GETTIMEOFDAY_01 = @HAVE_GETTIMEOFDAY_01@
HAVE_HOST_CPU_FAMILY_power = @HAVE_HOST_CPU_FAMILY_power@
HAVE_HOST_CPU_FAMILY_powerpc = @HAVE_HOST_CPU_FAMILY_powerpc@
HAVE_SIGACTION_01 = @HAVE_SIGACTION_01@
HAVE_SIGALTSTACK_01 = @HAVE_SIGALTSTACK_01@
HAVE_SIGSTACK_01 = @HAVE_SIGSTACK_01@
HAVE_STACK_T_01 = @HAVE_STACK_T_01@
HAVE_SYS_RESOURCE_H_01 = @HAVE_SYS_RESOURCE_H_01@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCURSES = @LIBCURSES@
LIBGMPXX_LDFLAGS = @LIBGMPXX_LDFLAGS@
LIBGMP_DLL = @LIBGMP_DLL@
LIBGMP_LDFLAGS = @LIBGMP_LDFLAGS@
LIBM = @LIBM@
LIBM_FOR_BUILD = @LIBM_FOR_BUILD@
LIBOBJS = @LIBOBJS@
LIBREADLINE = @LIBREADLINE@
LIBS = @LIBS@
LIBS_HW_SIMU = @LIBS_HW_SIMU@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4 = @M4@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SGXSDK = @SGXSDK@
SGXSDK_BINDIR = @SGXSDK_BINDIR@
SGXSDK_INCDIR = @SGXSDK_INCDIR@
SGXSDK_LIBDIR = @SGXSDK_LIBDIR@
SGXSSL = @SGXSSL@
SGXSSL_INCDIR = @SGXSSL_INCDIR@
SGXSSL_LIBDIR = @SGXSSL_LIBDIR@
SGX_DEBUG_FLAGS = @SGX_DEBUG_FLAGS@
SGX_ENCLAVE_CFLAGS = @SGX_ENCLAVE_CFLAGS@
SGX_ENCLAVE_CPPFLAGS = @SGX_ENCLAVE_CPPFLAGS@
SGX_ENCLAVE_CXXFLAGS = @SGX_ENCLAVE_CXXFLAGS@
SGX_ENCLAVE_LDADD = @SGX_ENCLAVE_LDADD@
SGX_ENCLAVE_LDFLAGS = @SGX_ENCLAVE_LDFLAGS@
SGX_TLIB_CFLAGS = @SGX_TLIB_CFLAGS@
SGX_TLIB_CPPFLAGS = @SGX_TLIB_CPPFLAGS@
SGX_TLIB_CXXFLAGS = @SGX_TLIB_CXXFLAGS@
SGX_TRTS_LIB = @SGX_TRTS_LIB@
SGX_TSERVICE_LIB = @SGX_TSERVICE_LIB@
SGX_UAE_SERVICE_LIB = @SGX_UAE_SERVICE_LIB@
SGX_URTS_LIB = @SGX_URTS_LIB@
SHELL = @SHELL@
SPEED_CYCLECOUNTER_OBJ = @SPEED_CYCLECOUNTER_OBJ@
STRIP = @STRIP@
TAL_OBJECT = @TAL_OBJECT@
TUNE_LIBS = @TUNE_LIBS@
TUNE_SQR_OBJ = @TUNE_SQR_OBJ@
U_FOR_BUILD = @U_FOR_BUILD@
VERSION = @VERSION@
WITH_READLINE_01 = @WITH_READLINE_01@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enclave_libdir = @enclave_libdir@
exec_prefix = @exec_prefix@
gmp_srclinks = @gmp_srclinks@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mpn_objects = @mpn_objects@
mpn_objs_in_libgmp = @mpn_objs_in_libgmp@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SGX_EDGER8R = $(SGXSDK_BINDIR)/sgx_edger8r
SGXSSL_BINDIR = @SGXSSL_BINDIR@
@SGX_ENABLED_TRUE@AM_CFLAGS = @SGX_TLIB_CFLAGS@ $(CFLAGS_CPU)
@SGX_ENABLED_FALSE@AM_CPPFLAGS = -D__GMP_WITHIN_GMP -I$(top_srcdir)
@SGX_ENABLED_TRUE@AM_CPPFLAGS = @SGX_TLIB_CPPFLAGS@ -D__GMP_WITHIN_GMP \
@SGX_ENABLED_TRUE@	-I$(top_srcdir)
@SGX_ENABLED_TRUE@AM_CXXFLAGS = @SGX_TLIB_CXXFLAGS@

# Include the automake definitions for building an Intel SGX trusted
# enclave library.
# - John Mechalas <john.p.mechalas@intel.com>

#------------------------------------------------------------
# Set build flags and sources for the Intel SGX build. This
# include the architecture flags for the CPU, which libtool
# would normally take care of.
# - John Mechalas <john.p.mechalas@intel.com>
#
MPF_SOURCES = \
  init.c init2.c inits.c set.c set_ui.c set_si.c set_str.c set_d.c set_z.c \
  set_q.c iset.c iset_ui.c iset_si.c iset_str.c iset_d.c clear.c clears.c \
  get_str.c dump.c size.c eq.c reldiff.c sqrt.c random2.c \
  add.c add_ui.c sub.c sub_ui.c ui_sub.c mul.c mul_ui.c div.c div_ui.c \
  cmp.c cmp_d.c cmp_z.c cmp_si.c cmp_ui.c mul_2exp.c div_2exp.c abs.c neg.c get_d.c \
  get_d_2exp.c set_dfl_prec.c set_prc.c set_prc_raw.c get_dfl_prec.c get_prc.c \
  ui_div.c sqrt_ui.c \
  pow_ui.c urandomb.c swap.c get_si.c get_ui.c int_p.c \
  ceilfloor.c trunc.c \
  fits_sint.c fits_slong.c fits_sshort.c \
  fits_uint.c fits_ulong.c fits_ushort.c \
  fits_s.h fits_u.h

@SGX_ENABLED_TRUE@noinst_LIBRARIES = libmpf.a
@SGX_ENABLED_TRUE@libmpf_a_CFLAGS = $(AM_CFLAGS)
@SGX_ENABLED_TRUE@libmpf_a_SOURCES = $(MPF_SOURCES)
@SGX_ENABLED_FALSE@noinst_LTLIBRARIES = libmpf.la
@SGX_ENABLED_FALSE@libmpf_la_SOURCES = $(MPF_SOURCES)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/sgx_tlib.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps mpf/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps mpf/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/sgx_tlib.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libmpf.a: $(libmpf_a_OBJECTS) $(libmpf_a_DEPENDENCIES) $(EXTRA_libmpf_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmpf.a
	$(AM_V_AR)$(libmpf_a_AR) libmpf.a $(libmpf_a_OBJECTS) $(libmpf_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmpf.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmpf.la: $(libmpf_la_OBJECTS) $(libmpf_la_DEPENDENCIES) $(EXTRA_libmpf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libmpf_la_rpath) $(libmpf_la_OBJECTS) $(libmpf_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libmpf_a-init.o: init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c

libmpf_a-init.obj: init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`

libmpf_a-init2.o: init2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-init2.o `test -f 'init2.c' || echo '$(srcdir)/'`init2.c

libmpf_a-init2.obj: init2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-init2.obj `if test -f 'init2.c'; then $(CYGPATH_W) 'init2.c'; else $(CYGPATH_W) '$(srcdir)/init2.c'; fi`

libmpf_a-inits.o: inits.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-inits.o `test -f 'inits.c' || echo '$(srcdir)/'`inits.c

libmpf_a-inits.obj: inits.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-inits.obj `if test -f 'inits.c'; then $(CYGPATH_W) 'inits.c'; else $(CYGPATH_W) '$(srcdir)/inits.c'; fi`

libmpf_a-set.o: set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set.o `test -f 'set.c' || echo '$(srcdir)/'`set.c

libmpf_a-set.obj: set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set.obj `if test -f 'set.c'; then $(CYGPATH_W) 'set.c'; else $(CYGPATH_W) '$(srcdir)/set.c'; fi`

libmpf_a-set_ui.o: set_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_ui.o `test -f 'set_ui.c' || echo '$(srcdir)/'`set_ui.c

libmpf_a-set_ui.obj: set_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_ui.obj `if test -f 'set_ui.c'; then $(CYGPATH_W) 'set_ui.c'; else $(CYGPATH_W) '$(srcdir)/set_ui.c'; fi`

libmpf_a-set_si.o: set_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_si.o `test -f 'set_si.c' || echo '$(srcdir)/'`set_si.c

libmpf_a-set_si.obj: set_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_si.obj `if test -f 'set_si.c'; then $(CYGPATH_W) 'set_si.c'; else $(CYGPATH_W) '$(srcdir)/set_si.c'; fi`

libmpf_a-set_str.o: set_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_str.o `test -f 'set_str.c' || echo '$(srcdir)/'`set_str.c

libmpf_a-set_str.obj: set_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_str.obj `if test -f 'set_str.c'; then $(CYGPATH_W) 'set_str.c'; else $(CYGPATH_W) '$(srcdir)/set_str.c'; fi`

libmpf_a-set_d.o: set_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_d.o `test -f 'set_d.c' || echo '$(srcdir)/'`set_d.c

libmpf_a-set_d.obj: set_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_d.obj `if test -f 'set_d.c'; then $(CYGPATH_W) 'set_d.c'; else $(CYGPATH_W) '$(srcdir)/set_d.c'; fi`

libmpf_a-set_z.o: set_z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_z.o `test -f 'set_z.c' || echo '$(srcdir)/'`set_z.c

libmpf_a-set_z.obj: set_z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_z.obj `if test -f 'set_z.c'; then $(CYGPATH_W) 'set_z.c'; else $(CYGPATH_W) '$(srcdir)/set_z.c'; fi`

libmpf_a-set_q.o: set_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_q.o `test -f 'set_q.c' || echo '$(srcdir)/'`set_q.c

libmpf_a-set_q.obj: set_q.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_q.obj `if test -f 'set_q.c'; then $(CYGPATH_W) 'set_q.c'; else $(CYGPATH_W) '$(srcdir)/set_q.c'; fi`

libmpf_a-iset.o: iset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset.o `test -f 'iset.c' || echo '$(srcdir)/'`iset.c

libmpf_a-iset.obj: iset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset.obj `if test -f 'iset.c'; then $(CYGPATH_W) 'iset.c'; else $(CYGPATH_W) '$(srcdir)/iset.c'; fi`

libmpf_a-iset_ui.o: iset_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_ui.o `test -f 'iset_ui.c' || echo '$(srcdir)/'`iset_ui.c

libmpf_a-iset_ui.obj: iset_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_ui.obj `if test -f 'iset_ui.c'; then $(CYGPATH_W) 'iset_ui.c'; else $(CYGPATH_W) '$(srcdir)/iset_ui.c'; fi`

libmpf_a-iset_si.o: iset_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_si.o `test -f 'iset_si.c' || echo '$(srcdir)/'`iset_si.c

libmpf_a-iset_si.obj: iset_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_si.obj `if test -f 'iset_si.c'; then $(CYGPATH_W) 'iset_si.c'; else $(CYGPATH_W) '$(srcdir)/iset_si.c'; fi`

libmpf_a-iset_str.o: iset_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_str.o `test -f 'iset_str.c' || echo '$(srcdir)/'`iset_str.c

libmpf_a-iset_str.obj: iset_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_str.obj `if test -f 'iset_str.c'; then $(CYGPATH_W) 'iset_str.c'; else $(CYGPATH_W) '$(srcdir)/iset_str.c'; fi`

libmpf_a-iset_d.o: iset_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_d.o `test -f 'iset_d.c' || echo '$(srcdir)/'`iset_d.c

libmpf_a-iset_d.obj: iset_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-iset_d.obj `if test -f 'iset_d.c'; then $(CYGPATH_W) 'iset_d.c'; else $(CYGPATH_W) '$(srcdir)/iset_d.c'; fi`

libmpf_a-clear.o: clear.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-clear.o `test -f 'clear.c' || echo '$(srcdir)/'`clear.c

libmpf_a-clear.obj: clear.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-clear.obj `if test -f 'clear.c'; then $(CYGPATH_W) 'clear.c'; else $(CYGPATH_W) '$(srcdir)/clear.c'; fi`

libmpf_a-clears.o: clears.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-clears.o `test -f 'clears.c' || echo '$(srcdir)/'`clears.c

libmpf_a-clears.obj: clears.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-clears.obj `if test -f 'clears.c'; then $(CYGPATH_W) 'clears.c'; else $(CYGPATH_W) '$(srcdir)/clears.c'; fi`

libmpf_a-get_str.o: get_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_str.o `test -f 'get_str.c' || echo '$(srcdir)/'`get_str.c

libmpf_a-get_str.obj: get_str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_str.obj `if test -f 'get_str.c'; then $(CYGPATH_W) 'get_str.c'; else $(CYGPATH_W) '$(srcdir)/get_str.c'; fi`

libmpf_a-dump.o: dump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-dump.o `test -f 'dump.c' || echo '$(srcdir)/'`dump.c

libmpf_a-dump.obj: dump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-dump.obj `if test -f 'dump.c'; then $(CYGPATH_W) 'dump.c'; else $(CYGPATH_W) '$(srcdir)/dump.c'; fi`

libmpf_a-size.o: size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-size.o `test -f 'size.c' || echo '$(srcdir)/'`size.c

libmpf_a-size.obj: size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-size.obj `if test -f 'size.c'; then $(CYGPATH_W) 'size.c'; else $(CYGPATH_W) '$(srcdir)/size.c'; fi`

libmpf_a-eq.o: eq.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-eq.o `test -f 'eq.c' || echo '$(srcdir)/'`eq.c

libmpf_a-eq.obj: eq.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-eq.obj `if test -f 'eq.c'; then $(CYGPATH_W) 'eq.c'; else $(CYGPATH_W) '$(srcdir)/eq.c'; fi`

libmpf_a-reldiff.o: reldiff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-reldiff.o `test -f 'reldiff.c' || echo '$(srcdir)/'`reldiff.c

libmpf_a-reldiff.obj: reldiff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-reldiff.obj `if test -f 'reldiff.c'; then $(CYGPATH_W) 'reldiff.c'; else $(CYGPATH_W) '$(srcdir)/reldiff.c'; fi`

libmpf_a-sqrt.o: sqrt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sqrt.o `test -f 'sqrt.c' || echo '$(srcdir)/'`sqrt.c

libmpf_a-sqrt.obj: sqrt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sqrt.obj `if test -f 'sqrt.c'; then $(CYGPATH_W) 'sqrt.c'; else $(CYGPATH_W) '$(srcdir)/sqrt.c'; fi`

libmpf_a-random2.o: random2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-random2.o `test -f 'random2.c' || echo '$(srcdir)/'`random2.c

libmpf_a-random2.obj: random2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-random2.obj `if test -f 'random2.c'; then $(CYGPATH_W) 'random2.c'; else $(CYGPATH_W) '$(srcdir)/random2.c'; fi`

libmpf_a-add.o: add.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-add.o `test -f 'add.c' || echo '$(srcdir)/'`add.c

libmpf_a-add.obj: add.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-add.obj `if test -f 'add.c'; then $(CYGPATH_W) 'add.c'; else $(CYGPATH_W) '$(srcdir)/add.c'; fi`

libmpf_a-add_ui.o: add_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-add_ui.o `test -f 'add_ui.c' || echo '$(srcdir)/'`add_ui.c

libmpf_a-add_ui.obj: add_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-add_ui.obj `if test -f 'add_ui.c'; then $(CYGPATH_W) 'add_ui.c'; else $(CYGPATH_W) '$(srcdir)/add_ui.c'; fi`

libmpf_a-sub.o: sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sub.o `test -f 'sub.c' || echo '$(srcdir)/'`sub.c

libmpf_a-sub.obj: sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sub.obj `if test -f 'sub.c'; then $(CYGPATH_W) 'sub.c'; else $(CYGPATH_W) '$(srcdir)/sub.c'; fi`

libmpf_a-sub_ui.o: sub_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sub_ui.o `test -f 'sub_ui.c' || echo '$(srcdir)/'`sub_ui.c

libmpf_a-sub_ui.obj: sub_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sub_ui.obj `if test -f 'sub_ui.c'; then $(CYGPATH_W) 'sub_ui.c'; else $(CYGPATH_W) '$(srcdir)/sub_ui.c'; fi`

libmpf_a-ui_sub.o: ui_sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-ui_sub.o `test -f 'ui_sub.c' || echo '$(srcdir)/'`ui_sub.c

libmpf_a-ui_sub.obj: ui_sub.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-ui_sub.obj `if test -f 'ui_sub.c'; then $(CYGPATH_W) 'ui_sub.c'; else $(CYGPATH_W) '$(srcdir)/ui_sub.c'; fi`

libmpf_a-mul.o: mul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-mul.o `test -f 'mul.c' || echo '$(srcdir)/'`mul.c

libmpf_a-mul.obj: mul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-mul.obj `if test -f 'mul.c'; then $(CYGPATH_W) 'mul.c'; else $(CYGPATH_W) '$(srcdir)/mul.c'; fi`

libmpf_a-mul_ui.o: mul_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-mul_ui.o `test -f 'mul_ui.c' || echo '$(srcdir)/'`mul_ui.c

libmpf_a-mul_ui.obj: mul_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-mul_ui.obj `if test -f 'mul_ui.c'; then $(CYGPATH_W) 'mul_ui.c'; else $(CYGPATH_W) '$(srcdir)/mul_ui.c'; fi`

libmpf_a-div.o: div.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-div.o `test -f 'div.c' || echo '$(srcdir)/'`div.c

libmpf_a-div.obj: div.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-div.obj `if test -f 'div.c'; then $(CYGPATH_W) 'div.c'; else $(CYGPATH_W) '$(srcdir)/div.c'; fi`

libmpf_a-div_ui.o: div_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-div_ui.o `test -f 'div_ui.c' || echo '$(srcdir)/'`div_ui.c

libmpf_a-div_ui.obj: div_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-div_ui.obj `if test -f 'div_ui.c'; then $(CYGPATH_W) 'div_ui.c'; else $(CYGPATH_W) '$(srcdir)/div_ui.c'; fi`

libmpf_a-cmp.o: cmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp.o `test -f 'cmp.c' || echo '$(srcdir)/'`cmp.c

libmpf_a-cmp.obj: cmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp.obj `if test -f 'cmp.c'; then $(CYGPATH_W) 'cmp.c'; else $(CYGPATH_W) '$(srcdir)/cmp.c'; fi`

libmpf_a-cmp_d.o: cmp_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_d.o `test -f 'cmp_d.c' || echo '$(srcdir)/'`cmp_d.c

libmpf_a-cmp_d.obj: cmp_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_d.obj `if test -f 'cmp_d.c'; then $(CYGPATH_W) 'cmp_d.c'; else $(CYGPATH_W) '$(srcdir)/cmp_d.c'; fi`

libmpf_a-cmp_z.o: cmp_z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_z.o `test -f 'cmp_z.c' || echo '$(srcdir)/'`cmp_z.c

libmpf_a-cmp_z.obj: cmp_z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_z.obj `if test -f 'cmp_z.c'; then $(CYGPATH_W) 'cmp_z.c'; else $(CYGPATH_W) '$(srcdir)/cmp_z.c'; fi`

libmpf_a-cmp_si.o: cmp_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_si.o `test -f 'cmp_si.c' || echo '$(srcdir)/'`cmp_si.c

libmpf_a-cmp_si.obj: cmp_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_si.obj `if test -f 'cmp_si.c'; then $(CYGPATH_W) 'cmp_si.c'; else $(CYGPATH_W) '$(srcdir)/cmp_si.c'; fi`

libmpf_a-cmp_ui.o: cmp_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_ui.o `test -f 'cmp_ui.c' || echo '$(srcdir)/'`cmp_ui.c

libmpf_a-cmp_ui.obj: cmp_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-cmp_ui.obj `if test -f 'cmp_ui.c'; then $(CYGPATH_W) 'cmp_ui.c'; else $(CYGPATH_W) '$(srcdir)/cmp_ui.c'; fi`

libmpf_a-mul_2exp.o: mul_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-mul_2exp.o `test -f 'mul_2exp.c' || echo '$(srcdir)/'`mul_2exp.c

libmpf_a-mul_2exp.obj: mul_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-mul_2exp.obj `if test -f 'mul_2exp.c'; then $(CYGPATH_W) 'mul_2exp.c'; else $(CYGPATH_W) '$(srcdir)/mul_2exp.c'; fi`

libmpf_a-div_2exp.o: div_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-div_2exp.o `test -f 'div_2exp.c' || echo '$(srcdir)/'`div_2exp.c

libmpf_a-div_2exp.obj: div_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-div_2exp.obj `if test -f 'div_2exp.c'; then $(CYGPATH_W) 'div_2exp.c'; else $(CYGPATH_W) '$(srcdir)/div_2exp.c'; fi`

libmpf_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libmpf_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libmpf_a-neg.o: neg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-neg.o `test -f 'neg.c' || echo '$(srcdir)/'`neg.c

libmpf_a-neg.obj: neg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-neg.obj `if test -f 'neg.c'; then $(CYGPATH_W) 'neg.c'; else $(CYGPATH_W) '$(srcdir)/neg.c'; fi`

libmpf_a-get_d.o: get_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_d.o `test -f 'get_d.c' || echo '$(srcdir)/'`get_d.c

libmpf_a-get_d.obj: get_d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_d.obj `if test -f 'get_d.c'; then $(CYGPATH_W) 'get_d.c'; else $(CYGPATH_W) '$(srcdir)/get_d.c'; fi`

libmpf_a-get_d_2exp.o: get_d_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_d_2exp.o `test -f 'get_d_2exp.c' || echo '$(srcdir)/'`get_d_2exp.c

libmpf_a-get_d_2exp.obj: get_d_2exp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_d_2exp.obj `if test -f 'get_d_2exp.c'; then $(CYGPATH_W) 'get_d_2exp.c'; else $(CYGPATH_W) '$(srcdir)/get_d_2exp.c'; fi`

libmpf_a-set_dfl_prec.o: set_dfl_prec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_dfl_prec.o `test -f 'set_dfl_prec.c' || echo '$(srcdir)/'`set_dfl_prec.c

libmpf_a-set_dfl_prec.obj: set_dfl_prec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_dfl_prec.obj `if test -f 'set_dfl_prec.c'; then $(CYGPATH_W) 'set_dfl_prec.c'; else $(CYGPATH_W) '$(srcdir)/set_dfl_prec.c'; fi`

libmpf_a-set_prc.o: set_prc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_prc.o `test -f 'set_prc.c' || echo '$(srcdir)/'`set_prc.c

libmpf_a-set_prc.obj: set_prc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_prc.obj `if test -f 'set_prc.c'; then $(CYGPATH_W) 'set_prc.c'; else $(CYGPATH_W) '$(srcdir)/set_prc.c'; fi`

libmpf_a-set_prc_raw.o: set_prc_raw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_prc_raw.o `test -f 'set_prc_raw.c' || echo '$(srcdir)/'`set_prc_raw.c

libmpf_a-set_prc_raw.obj: set_prc_raw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-set_prc_raw.obj `if test -f 'set_prc_raw.c'; then $(CYGPATH_W) 'set_prc_raw.c'; else $(CYGPATH_W) '$(srcdir)/set_prc_raw.c'; fi`

libmpf_a-get_dfl_prec.o: get_dfl_prec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_dfl_prec.o `test -f 'get_dfl_prec.c' || echo '$(srcdir)/'`get_dfl_prec.c

libmpf_a-get_dfl_prec.obj: get_dfl_prec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_dfl_prec.obj `if test -f 'get_dfl_prec.c'; then $(CYGPATH_W) 'get_dfl_prec.c'; else $(CYGPATH_W) '$(srcdir)/get_dfl_prec.c'; fi`

libmpf_a-get_prc.o: get_prc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_prc.o `test -f 'get_prc.c' || echo '$(srcdir)/'`get_prc.c

libmpf_a-get_prc.obj: get_prc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_prc.obj `if test -f 'get_prc.c'; then $(CYGPATH_W) 'get_prc.c'; else $(CYGPATH_W) '$(srcdir)/get_prc.c'; fi`

libmpf_a-ui_div.o: ui_div.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-ui_div.o `test -f 'ui_div.c' || echo '$(srcdir)/'`ui_div.c

libmpf_a-ui_div.obj: ui_div.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-ui_div.obj `if test -f 'ui_div.c'; then $(CYGPATH_W) 'ui_div.c'; else $(CYGPATH_W) '$(srcdir)/ui_div.c'; fi`

libmpf_a-sqrt_ui.o: sqrt_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sqrt_ui.o `test -f 'sqrt_ui.c' || echo '$(srcdir)/'`sqrt_ui.c

libmpf_a-sqrt_ui.obj: sqrt_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-sqrt_ui.obj `if test -f 'sqrt_ui.c'; then $(CYGPATH_W) 'sqrt_ui.c'; else $(CYGPATH_W) '$(srcdir)/sqrt_ui.c'; fi`

libmpf_a-pow_ui.o: pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-pow_ui.o `test -f 'pow_ui.c' || echo '$(srcdir)/'`pow_ui.c

libmpf_a-pow_ui.obj: pow_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-pow_ui.obj `if test -f 'pow_ui.c'; then $(CYGPATH_W) 'pow_ui.c'; else $(CYGPATH_W) '$(srcdir)/pow_ui.c'; fi`

libmpf_a-urandomb.o: urandomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-urandomb.o `test -f 'urandomb.c' || echo '$(srcdir)/'`urandomb.c

libmpf_a-urandomb.obj: urandomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-urandomb.obj `if test -f 'urandomb.c'; then $(CYGPATH_W) 'urandomb.c'; else $(CYGPATH_W) '$(srcdir)/urandomb.c'; fi`

libmpf_a-swap.o: swap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-swap.o `test -f 'swap.c' || echo '$(srcdir)/'`swap.c

libmpf_a-swap.obj: swap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-swap.obj `if test -f 'swap.c'; then $(CYGPATH_W) 'swap.c'; else $(CYGPATH_W) '$(srcdir)/swap.c'; fi`

libmpf_a-get_si.o: get_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_si.o `test -f 'get_si.c' || echo '$(srcdir)/'`get_si.c

libmpf_a-get_si.obj: get_si.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_si.obj `if test -f 'get_si.c'; then $(CYGPATH_W) 'get_si.c'; else $(CYGPATH_W) '$(srcdir)/get_si.c'; fi`

libmpf_a-get_ui.o: get_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_ui.o `test -f 'get_ui.c' || echo '$(srcdir)/'`get_ui.c

libmpf_a-get_ui.obj: get_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-get_ui.obj `if test -f 'get_ui.c'; then $(CYGPATH_W) 'get_ui.c'; else $(CYGPATH_W) '$(srcdir)/get_ui.c'; fi`

libmpf_a-int_p.o: int_p.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-int_p.o `test -f 'int_p.c' || echo '$(srcdir)/'`int_p.c

libmpf_a-int_p.obj: int_p.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-int_p.obj `if test -f 'int_p.c'; then $(CYGPATH_W) 'int_p.c'; else $(CYGPATH_W) '$(srcdir)/int_p.c'; fi`

libmpf_a-ceilfloor.o: ceilfloor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-ceilfloor.o `test -f 'ceilfloor.c' || echo '$(srcdir)/'`ceilfloor.c

libmpf_a-ceilfloor.obj: ceilfloor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-ceilfloor.obj `if test -f 'ceilfloor.c'; then $(CYGPATH_W) 'ceilfloor.c'; else $(CYGPATH_W) '$(srcdir)/ceilfloor.c'; fi`

libmpf_a-trunc.o: trunc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-trunc.o `test -f 'trunc.c' || echo '$(srcdir)/'`trunc.c

libmpf_a-trunc.obj: trunc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-trunc.obj `if test -f 'trunc.c'; then $(CYGPATH_W) 'trunc.c'; else $(CYGPATH_W) '$(srcdir)/trunc.c'; fi`

libmpf_a-fits_sint.o: fits_sint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_sint.o `test -f 'fits_sint.c' || echo '$(srcdir)/'`fits_sint.c

libmpf_a-fits_sint.obj: fits_sint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_sint.obj `if test -f 'fits_sint.c'; then $(CYGPATH_W) 'fits_sint.c'; else $(CYGPATH_W) '$(srcdir)/fits_sint.c'; fi`

libmpf_a-fits_slong.o: fits_slong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_slong.o `test -f 'fits_slong.c' || echo '$(srcdir)/'`fits_slong.c

libmpf_a-fits_slong.obj: fits_slong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_slong.obj `if test -f 'fits_slong.c'; then $(CYGPATH_W) 'fits_slong.c'; else $(CYGPATH_W) '$(srcdir)/fits_slong.c'; fi`

libmpf_a-fits_sshort.o: fits_sshort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_sshort.o `test -f 'fits_sshort.c' || echo '$(srcdir)/'`fits_sshort.c

libmpf_a-fits_sshort.obj: fits_sshort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_sshort.obj `if test -f 'fits_sshort.c'; then $(CYGPATH_W) 'fits_sshort.c'; else $(CYGPATH_W) '$(srcdir)/fits_sshort.c'; fi`

libmpf_a-fits_uint.o: fits_uint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_uint.o `test -f 'fits_uint.c' || echo '$(srcdir)/'`fits_uint.c

libmpf_a-fits_uint.obj: fits_uint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_uint.obj `if test -f 'fits_uint.c'; then $(CYGPATH_W) 'fits_uint.c'; else $(CYGPATH_W) '$(srcdir)/fits_uint.c'; fi`

libmpf_a-fits_ulong.o: fits_ulong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_ulong.o `test -f 'fits_ulong.c' || echo '$(srcdir)/'`fits_ulong.c

libmpf_a-fits_ulong.obj: fits_ulong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_ulong.obj `if test -f 'fits_ulong.c'; then $(CYGPATH_W) 'fits_ulong.c'; else $(CYGPATH_W) '$(srcdir)/fits_ulong.c'; fi`

libmpf_a-fits_ushort.o: fits_ushort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_ushort.o `test -f 'fits_ushort.c' || echo '$(srcdir)/'`fits_ushort.c

libmpf_a-fits_ushort.obj: fits_ushort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpf_a_CFLAGS) $(CFLAGS) -c -o libmpf_a-fits_ushort.obj `if test -f 'fits_ushort.c'; then $(CYGPATH_W) 'fits_ushort.c'; else $(CYGPATH_W) '$(srcdir)/fits_ushort.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


%_t.h %_t.c: %.edl
	$(SGX_EDGER8R) --search-path $(SGXSDK_INCDIR) $(SGX_EDGER8R_FLAGS) --trusted $<

#
#------------------------------------------------------------

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
